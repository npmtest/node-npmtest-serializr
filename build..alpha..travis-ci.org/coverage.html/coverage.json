{"/home/travis/build/npmtest/node-npmtest-serializr/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-serializr/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_serializr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-serializr/lib.npmtest_serializr.js":{"path":"/home/travis/build/npmtest/node-npmtest-serializr/lib.npmtest_serializr.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_serializr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_serializr = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_serializr = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-serializr/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-serializr/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-serializr && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_serializr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_serializr","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_serializr.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_serializr.rollup.js'] =","            local.assetsDict['/assets.npmtest_serializr.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_serializr.__dirname + '/lib.npmtest_serializr.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-serializr/node_modules/serializr/serializr.js":{"path":"/home/travis/build/npmtest/node-npmtest-serializr/node_modules/serializr/serializr.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":1,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":1,"119":0,"120":1,"121":0,"122":1,"123":0,"124":1,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":1,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":1,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":1,"308":1,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":1,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":1,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":1,"335":0,"336":0,"337":0,"338":0,"339":0,"340":1,"341":0,"342":0,"343":0,"344":0,"345":1,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":1,"359":0,"360":0,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":1,"383":0,"384":0,"385":1,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":1,"397":0,"398":1,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":1,"431":1,"432":1,"433":0,"434":0,"435":0,"436":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0,0],"120":[0,0],"121":[0,0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[1,0],"131":[0,0],"132":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"mrFactory","line":4,"loc":{"start":{"line":4,"column":4},"end":{"line":4,"column":25}}},"3":{"name":"GUARDED_NOOP","line":10,"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}}},"4":{"name":"once","line":15,"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}}},"5":{"name":"(anonymous_5)","line":17,"loc":{"start":{"line":17,"column":19},"end":{"line":17,"column":30}}},"6":{"name":"invariant","line":26,"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":42}}},"7":{"name":"parallel","line":31,"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":45}}},"8":{"name":"(anonymous_8)","line":38,"loc":{"start":{"line":38,"column":30},"end":{"line":38,"column":57}}},"9":{"name":"(anonymous_9)","line":50,"loc":{"start":{"line":50,"column":23},"end":{"line":50,"column":45}}},"10":{"name":"isPrimitive","line":55,"loc":{"start":{"line":55,"column":8},"end":{"line":55,"column":36}}},"11":{"name":"createSimpleSchema","line":128,"loc":{"start":{"line":128,"column":8},"end":{"line":128,"column":43}}},"12":{"name":"(anonymous_12)","line":130,"loc":{"start":{"line":130,"column":25},"end":{"line":130,"column":36}}},"13":{"name":"createModelSchema","line":161,"loc":{"start":{"line":161,"column":8},"end":{"line":161,"column":58}}},"14":{"name":"(anonymous_14)","line":166,"loc":{"start":{"line":166,"column":36},"end":{"line":166,"column":47}}},"15":{"name":"serializable","line":210,"loc":{"start":{"line":210,"column":8},"end":{"line":210,"column":48}}},"16":{"name":"getParamNames","line":225,"loc":{"start":{"line":225,"column":8},"end":{"line":225,"column":37}}},"17":{"name":"serializableDecorator","line":233,"loc":{"start":{"line":233,"column":8},"end":{"line":233,"column":81}}},"18":{"name":"(anonymous_18)","line":249,"loc":{"start":{"line":249,"column":30},"end":{"line":249,"column":48}}},"19":{"name":"F","line":250,"loc":{"start":{"line":250,"column":24},"end":{"line":250,"column":41}}},"20":{"name":"(anonymous_20)","line":256,"loc":{"start":{"line":256,"column":73},"end":{"line":256,"column":88}}},"21":{"name":"serializeAll","line":297,"loc":{"start":{"line":297,"column":8},"end":{"line":297,"column":38}}},"22":{"name":"getDefaultModelSchema","line":316,"loc":{"start":{"line":316,"column":8},"end":{"line":316,"column":46}}},"23":{"name":"setDefaultModelSchema","line":339,"loc":{"start":{"line":339,"column":8},"end":{"line":339,"column":59}}},"24":{"name":"isModelSchema","line":344,"loc":{"start":{"line":344,"column":8},"end":{"line":344,"column":38}}},"25":{"name":"isPropSchema","line":348,"loc":{"start":{"line":348,"column":8},"end":{"line":348,"column":37}}},"26":{"name":"isAliasedPropSchema","line":352,"loc":{"start":{"line":352,"column":8},"end":{"line":352,"column":49}}},"27":{"name":"isIdentifierPropSchema","line":356,"loc":{"start":{"line":356,"column":8},"end":{"line":356,"column":52}}},"28":{"name":"getIdentifierProp","line":360,"loc":{"start":{"line":360,"column":8},"end":{"line":360,"column":48}}},"29":{"name":"isAssignableTo","line":372,"loc":{"start":{"line":372,"column":8},"end":{"line":372,"column":58}}},"30":{"name":"serialize","line":394,"loc":{"start":{"line":394,"column":8},"end":{"line":394,"column":39}}},"31":{"name":"(anonymous_31)","line":408,"loc":{"start":{"line":408,"column":33},"end":{"line":408,"column":49}}},"32":{"name":"serializeWithSchema","line":414,"loc":{"start":{"line":414,"column":8},"end":{"line":414,"column":50}}},"33":{"name":"(anonymous_33)","line":424,"loc":{"start":{"line":424,"column":46},"end":{"line":424,"column":61}}},"34":{"name":"serializeStarProps","line":444,"loc":{"start":{"line":444,"column":8},"end":{"line":444,"column":57}}},"35":{"name":"deserialize","line":470,"loc":{"start":{"line":470,"column":8},"end":{"line":470,"column":65}}},"36":{"name":"(anonymous_36)","line":478,"loc":{"start":{"line":478,"column":20},"end":{"line":478,"column":51}}},"37":{"name":"deserializeObjectWithSchema","line":490,"loc":{"start":{"line":490,"column":8},"end":{"line":490,"column":96}}},"38":{"name":"deserializePropsWithSchema","line":505,"loc":{"start":{"line":505,"column":8},"end":{"line":505,"column":75}}},"39":{"name":"(anonymous_39)","line":508,"loc":{"start":{"line":508,"column":46},"end":{"line":508,"column":66}}},"40":{"name":"(anonymous_40)","line":527,"loc":{"start":{"line":527,"column":55},"end":{"line":527,"column":72}}},"41":{"name":"schemaHasAlias","line":538,"loc":{"start":{"line":538,"column":8},"end":{"line":538,"column":46}}},"42":{"name":"deserializeStarProps","line":545,"loc":{"start":{"line":545,"column":8},"end":{"line":545,"column":57}}},"43":{"name":"Context","line":554,"loc":{"start":{"line":554,"column":8},"end":{"line":554,"column":82}}},"44":{"name":"(anonymous_44)","line":574,"loc":{"start":{"line":574,"column":43},"end":{"line":574,"column":57}}},"45":{"name":"(anonymous_45)","line":577,"loc":{"start":{"line":577,"column":24},"end":{"line":577,"column":45}}},"46":{"name":"(anonymous_46)","line":590,"loc":{"start":{"line":590,"column":69},"end":{"line":590,"column":85}}},"47":{"name":"(anonymous_47)","line":604,"loc":{"start":{"line":604,"column":34},"end":{"line":604,"column":73}}},"48":{"name":"(anonymous_48)","line":607,"loc":{"start":{"line":607,"column":59},"end":{"line":607,"column":79}}},"49":{"name":"(anonymous_49)","line":624,"loc":{"start":{"line":624,"column":36},"end":{"line":624,"column":71}}},"50":{"name":"update","line":657,"loc":{"start":{"line":657,"column":8},"end":{"line":657,"column":73}}},"51":{"name":"primitive","line":700,"loc":{"start":{"line":700,"column":8},"end":{"line":700,"column":29}}},"52":{"name":"(anonymous_52)","line":702,"loc":{"start":{"line":702,"column":28},"end":{"line":702,"column":45}}},"53":{"name":"(anonymous_53)","line":706,"loc":{"start":{"line":706,"column":30},"end":{"line":706,"column":57}}},"54":{"name":"identifier","line":751,"loc":{"start":{"line":751,"column":8},"end":{"line":751,"column":40}}},"55":{"name":"(anonymous_55)","line":756,"loc":{"start":{"line":756,"column":30},"end":{"line":756,"column":66}}},"56":{"name":"(anonymous_56)","line":757,"loc":{"start":{"line":757,"column":66},"end":{"line":757,"column":84}}},"57":{"name":"defaultRegisterFunction","line":767,"loc":{"start":{"line":767,"column":8},"end":{"line":767,"column":61}}},"58":{"name":"date","line":776,"loc":{"start":{"line":776,"column":8},"end":{"line":776,"column":24}}},"59":{"name":"(anonymous_59)","line":779,"loc":{"start":{"line":779,"column":28},"end":{"line":779,"column":44}}},"60":{"name":"(anonymous_60)","line":785,"loc":{"start":{"line":785,"column":30},"end":{"line":785,"column":57}}},"61":{"name":"alias","line":810,"loc":{"start":{"line":810,"column":8},"end":{"line":810,"column":41}}},"62":{"name":"custom","line":840,"loc":{"start":{"line":840,"column":8},"end":{"line":840,"column":50}}},"63":{"name":"(anonymous_63)","line":845,"loc":{"start":{"line":845,"column":30},"end":{"line":845,"column":57}}},"64":{"name":"object","line":880,"loc":{"start":{"line":880,"column":8},"end":{"line":880,"column":37}}},"65":{"name":"(anonymous_65)","line":883,"loc":{"start":{"line":883,"column":28},"end":{"line":883,"column":44}}},"66":{"name":"(anonymous_66)","line":890,"loc":{"start":{"line":890,"column":30},"end":{"line":890,"column":66}}},"67":{"name":"reference","line":957,"loc":{"start":{"line":957,"column":8},"end":{"line":957,"column":45}}},"68":{"name":"initialize","line":961,"loc":{"start":{"line":961,"column":12},"end":{"line":961,"column":34}}},"69":{"name":"(anonymous_69)","line":976,"loc":{"start":{"line":976,"column":28},"end":{"line":976,"column":44}}},"70":{"name":"(anonymous_70)","line":981,"loc":{"start":{"line":981,"column":30},"end":{"line":981,"column":71}}},"71":{"name":"createDefaultRefLookup","line":992,"loc":{"start":{"line":992,"column":8},"end":{"line":992,"column":53}}},"72":{"name":"resolve","line":993,"loc":{"start":{"line":993,"column":19},"end":{"line":993,"column":55}}},"73":{"name":"list","line":1027,"loc":{"start":{"line":1027,"column":8},"end":{"line":1027,"column":34}}},"74":{"name":"(anonymous_74)","line":1032,"loc":{"start":{"line":1032,"column":28},"end":{"line":1032,"column":42}}},"75":{"name":"(anonymous_75)","line":1036,"loc":{"start":{"line":1036,"column":30},"end":{"line":1036,"column":65}}},"76":{"name":"(anonymous_76)","line":1041,"loc":{"start":{"line":1041,"column":24},"end":{"line":1041,"column":50}}},"77":{"name":"isMapLike","line":1050,"loc":{"start":{"line":1050,"column":8},"end":{"line":1050,"column":34}}},"78":{"name":"map","line":1062,"loc":{"start":{"line":1062,"column":8},"end":{"line":1062,"column":33}}},"79":{"name":"(anonymous_79)","line":1067,"loc":{"start":{"line":1067,"column":28},"end":{"line":1067,"column":41}}},"80":{"name":"(anonymous_80)","line":1072,"loc":{"start":{"line":1072,"column":34},"end":{"line":1072,"column":55}}},"81":{"name":"(anonymous_81)","line":1079,"loc":{"start":{"line":1079,"column":30},"end":{"line":1079,"column":76}}},"82":{"name":"(anonymous_82)","line":1084,"loc":{"start":{"line":1084,"column":33},"end":{"line":1084,"column":48}}},"83":{"name":"(anonymous_83)","line":1087,"loc":{"start":{"line":1087,"column":24},"end":{"line":1087,"column":47}}},"84":{"name":"(anonymous_84)","line":1149,"loc":{"start":{"line":1149,"column":3},"end":{"line":1149,"column":14}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1149,"column":32}},"2":{"start":{"line":4,"column":4},"end":{"line":1139,"column":5}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":82}},"4":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"5":{"start":{"line":11,"column":12},"end":{"line":12,"column":36}},"6":{"start":{"line":12,"column":16},"end":{"line":12,"column":36}},"7":{"start":{"line":15,"column":8},"end":{"line":24,"column":9}},"8":{"start":{"line":16,"column":12},"end":{"line":16,"column":29}},"9":{"start":{"line":17,"column":12},"end":{"line":23,"column":13}},"10":{"start":{"line":18,"column":16},"end":{"line":21,"column":17}},"11":{"start":{"line":19,"column":20},"end":{"line":19,"column":32}},"12":{"start":{"line":20,"column":20},"end":{"line":20,"column":52}},"13":{"start":{"line":22,"column":16},"end":{"line":22,"column":62}},"14":{"start":{"line":26,"column":8},"end":{"line":29,"column":9}},"15":{"start":{"line":27,"column":12},"end":{"line":28,"column":78}},"16":{"start":{"line":28,"column":16},"end":{"line":28,"column":78}},"17":{"start":{"line":31,"column":8},"end":{"line":53,"column":9}},"18":{"start":{"line":33,"column":12},"end":{"line":34,"column":40}},"19":{"start":{"line":34,"column":16},"end":{"line":34,"column":40}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":32}},"22":{"start":{"line":37,"column":12},"end":{"line":37,"column":30}},"23":{"start":{"line":38,"column":12},"end":{"line":49,"column":13}},"24":{"start":{"line":39,"column":16},"end":{"line":48,"column":17}},"25":{"start":{"line":40,"column":20},"end":{"line":43,"column":21}},"26":{"start":{"line":41,"column":24},"end":{"line":41,"column":37}},"27":{"start":{"line":42,"column":24},"end":{"line":42,"column":31}},"28":{"start":{"line":45,"column":20},"end":{"line":45,"column":45}},"29":{"start":{"line":46,"column":20},"end":{"line":47,"column":45}},"30":{"start":{"line":47,"column":24},"end":{"line":47,"column":45}},"31":{"start":{"line":50,"column":12},"end":{"line":52,"column":14}},"32":{"start":{"line":51,"column":16},"end":{"line":51,"column":61}},"33":{"start":{"line":55,"column":8},"end":{"line":59,"column":9}},"34":{"start":{"line":56,"column":12},"end":{"line":57,"column":27}},"35":{"start":{"line":57,"column":16},"end":{"line":57,"column":27}},"36":{"start":{"line":58,"column":12},"end":{"line":58,"column":75}},"37":{"start":{"line":128,"column":8},"end":{"line":135,"column":9}},"38":{"start":{"line":129,"column":12},"end":{"line":134,"column":13}},"39":{"start":{"line":131,"column":20},"end":{"line":131,"column":29}},"40":{"start":{"line":161,"column":8},"end":{"line":179,"column":9}},"41":{"start":{"line":162,"column":12},"end":{"line":162,"column":97}},"42":{"start":{"line":163,"column":12},"end":{"line":163,"column":83}},"43":{"start":{"line":164,"column":12},"end":{"line":170,"column":13}},"44":{"start":{"line":167,"column":20},"end":{"line":167,"column":38}},"45":{"start":{"line":172,"column":12},"end":{"line":176,"column":13}},"46":{"start":{"line":173,"column":16},"end":{"line":173,"column":74}},"47":{"start":{"line":174,"column":16},"end":{"line":175,"column":37}},"48":{"start":{"line":175,"column":20},"end":{"line":175,"column":37}},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":47}},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":24}},"51":{"start":{"line":210,"column":8},"end":{"line":220,"column":9}},"52":{"start":{"line":211,"column":12},"end":{"line":219,"column":13}},"53":{"start":{"line":213,"column":16},"end":{"line":213,"column":77}},"54":{"start":{"line":214,"column":16},"end":{"line":214,"column":88}},"55":{"start":{"line":215,"column":16},"end":{"line":215,"column":67}},"56":{"start":{"line":218,"column":16},"end":{"line":218,"column":75}},"57":{"start":{"line":223,"column":8},"end":{"line":223,"column":63}},"58":{"start":{"line":224,"column":8},"end":{"line":224,"column":41}},"59":{"start":{"line":225,"column":8},"end":{"line":231,"column":9}},"60":{"start":{"line":226,"column":12},"end":{"line":226,"column":67}},"61":{"start":{"line":227,"column":12},"end":{"line":227,"column":100}},"62":{"start":{"line":228,"column":12},"end":{"line":229,"column":27}},"63":{"start":{"line":229,"column":16},"end":{"line":229,"column":27}},"64":{"start":{"line":230,"column":12},"end":{"line":230,"column":25}},"65":{"start":{"line":233,"column":8},"end":{"line":280,"column":9}},"66":{"start":{"line":234,"column":12},"end":{"line":234,"column":113}},"67":{"start":{"line":236,"column":12},"end":{"line":236,"column":23}},"68":{"start":{"line":237,"column":12},"end":{"line":266,"column":13}},"69":{"start":{"line":240,"column":16},"end":{"line":240,"column":94}},"70":{"start":{"line":241,"column":16},"end":{"line":241,"column":89}},"71":{"start":{"line":242,"column":16},"end":{"line":242,"column":54}},"72":{"start":{"line":243,"column":16},"end":{"line":265,"column":17}},"73":{"start":{"line":244,"column":20},"end":{"line":244,"column":54}},"74":{"start":{"line":245,"column":20},"end":{"line":245,"column":55}},"75":{"start":{"line":246,"column":20},"end":{"line":246,"column":42}},"76":{"start":{"line":247,"column":20},"end":{"line":247,"column":45}},"77":{"start":{"line":249,"column":20},"end":{"line":264,"column":21}},"78":{"start":{"line":250,"column":24},"end":{"line":252,"column":25}},"79":{"start":{"line":251,"column":28},"end":{"line":251,"column":71}},"80":{"start":{"line":253,"column":24},"end":{"line":253,"column":66}},"81":{"start":{"line":254,"column":24},"end":{"line":254,"column":39}},"82":{"start":{"line":255,"column":24},"end":{"line":262,"column":25}},"83":{"start":{"line":256,"column":26},"end":{"line":261,"column":29}},"84":{"start":{"line":257,"column":28},"end":{"line":257,"column":70}},"85":{"start":{"line":258,"column":28},"end":{"line":260,"column":29}},"86":{"start":{"line":259,"column":30},"end":{"line":259,"column":70}},"87":{"start":{"line":263,"column":24},"end":{"line":263,"column":44}},"88":{"start":{"line":267,"column":12},"end":{"line":267,"column":97}},"89":{"start":{"line":268,"column":12},"end":{"line":268,"column":52}},"90":{"start":{"line":270,"column":12},"end":{"line":271,"column":73}},"91":{"start":{"line":271,"column":16},"end":{"line":271,"column":73}},"92":{"start":{"line":272,"column":12},"end":{"line":274,"column":73}},"93":{"start":{"line":274,"column":16},"end":{"line":274,"column":73}},"94":{"start":{"line":275,"column":12},"end":{"line":275,"column":45}},"95":{"start":{"line":277,"column":12},"end":{"line":278,"column":42}},"96":{"start":{"line":278,"column":16},"end":{"line":278,"column":42}},"97":{"start":{"line":279,"column":12},"end":{"line":279,"column":29}},"98":{"start":{"line":297,"column":8},"end":{"line":308,"column":9}},"99":{"start":{"line":298,"column":12},"end":{"line":298,"column":130}},"100":{"start":{"line":300,"column":12},"end":{"line":300,"column":52}},"101":{"start":{"line":301,"column":12},"end":{"line":304,"column":13}},"102":{"start":{"line":302,"column":16},"end":{"line":302,"column":52}},"103":{"start":{"line":303,"column":16},"end":{"line":303,"column":51}},"104":{"start":{"line":306,"column":12},"end":{"line":306,"column":59}},"105":{"start":{"line":307,"column":12},"end":{"line":307,"column":25}},"106":{"start":{"line":316,"column":8},"end":{"line":325,"column":9}},"107":{"start":{"line":317,"column":12},"end":{"line":318,"column":27}},"108":{"start":{"line":318,"column":16},"end":{"line":318,"column":27}},"109":{"start":{"line":319,"column":12},"end":{"line":320,"column":28}},"110":{"start":{"line":320,"column":16},"end":{"line":320,"column":28}},"111":{"start":{"line":321,"column":12},"end":{"line":322,"column":42}},"112":{"start":{"line":322,"column":16},"end":{"line":322,"column":42}},"113":{"start":{"line":323,"column":12},"end":{"line":324,"column":54}},"114":{"start":{"line":324,"column":16},"end":{"line":324,"column":54}},"115":{"start":{"line":339,"column":8},"end":{"line":342,"column":9}},"116":{"start":{"line":340,"column":12},"end":{"line":340,"column":49}},"117":{"start":{"line":341,"column":12},"end":{"line":341,"column":52}},"118":{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},"119":{"start":{"line":345,"column":12},"end":{"line":345,"column":56}},"120":{"start":{"line":348,"column":8},"end":{"line":350,"column":9}},"121":{"start":{"line":349,"column":12},"end":{"line":349,"column":66}},"122":{"start":{"line":352,"column":8},"end":{"line":354,"column":9}},"123":{"start":{"line":353,"column":12},"end":{"line":353,"column":74}},"124":{"start":{"line":356,"column":8},"end":{"line":358,"column":9}},"125":{"start":{"line":357,"column":12},"end":{"line":357,"column":84}},"126":{"start":{"line":360,"column":8},"end":{"line":370,"column":9}},"127":{"start":{"line":361,"column":12},"end":{"line":361,"column":49}},"128":{"start":{"line":363,"column":12},"end":{"line":368,"column":13}},"129":{"start":{"line":364,"column":16},"end":{"line":366,"column":39}},"130":{"start":{"line":365,"column":20},"end":{"line":366,"column":39}},"131":{"start":{"line":366,"column":24},"end":{"line":366,"column":39}},"132":{"start":{"line":367,"column":16},"end":{"line":367,"column":49}},"133":{"start":{"line":369,"column":12},"end":{"line":369,"column":23}},"134":{"start":{"line":372,"column":8},"end":{"line":379,"column":9}},"135":{"start":{"line":373,"column":12},"end":{"line":377,"column":13}},"136":{"start":{"line":374,"column":16},"end":{"line":375,"column":31}},"137":{"start":{"line":375,"column":20},"end":{"line":375,"column":31}},"138":{"start":{"line":376,"column":16},"end":{"line":376,"column":47}},"139":{"start":{"line":378,"column":12},"end":{"line":378,"column":24}},"140":{"start":{"line":394,"column":8},"end":{"line":412,"column":9}},"141":{"start":{"line":395,"column":12},"end":{"line":395,"column":111}},"142":{"start":{"line":396,"column":12},"end":{"line":396,"column":60}},"143":{"start":{"line":397,"column":12},"end":{"line":397,"column":61}},"144":{"start":{"line":398,"column":12},"end":{"line":405,"column":13}},"145":{"start":{"line":399,"column":16},"end":{"line":402,"column":60}},"146":{"start":{"line":400,"column":20},"end":{"line":400,"column":29}},"147":{"start":{"line":401,"column":21},"end":{"line":402,"column":60}},"148":{"start":{"line":402,"column":20},"end":{"line":402,"column":60}},"149":{"start":{"line":403,"column":19},"end":{"line":405,"column":13}},"150":{"start":{"line":404,"column":16},"end":{"line":404,"column":53}},"151":{"start":{"line":406,"column":12},"end":{"line":406,"column":76}},"152":{"start":{"line":407,"column":12},"end":{"line":410,"column":18}},"153":{"start":{"line":408,"column":16},"end":{"line":410,"column":18}},"154":{"start":{"line":409,"column":20},"end":{"line":409,"column":60}},"155":{"start":{"line":411,"column":12},"end":{"line":411,"column":53}},"156":{"start":{"line":414,"column":8},"end":{"line":442,"column":9}},"157":{"start":{"line":415,"column":12},"end":{"line":415,"column":78}},"158":{"start":{"line":416,"column":12},"end":{"line":416,"column":72}},"159":{"start":{"line":417,"column":12},"end":{"line":417,"column":19}},"160":{"start":{"line":418,"column":12},"end":{"line":423,"column":13}},"161":{"start":{"line":419,"column":16},"end":{"line":419,"column":62}},"162":{"start":{"line":422,"column":16},"end":{"line":422,"column":24}},"163":{"start":{"line":424,"column":12},"end":{"line":440,"column":14}},"164":{"start":{"line":425,"column":16},"end":{"line":425,"column":47}},"165":{"start":{"line":426,"column":16},"end":{"line":430,"column":17}},"166":{"start":{"line":427,"column":20},"end":{"line":427,"column":95}},"167":{"start":{"line":428,"column":20},"end":{"line":428,"column":56}},"168":{"start":{"line":429,"column":20},"end":{"line":429,"column":26}},"169":{"start":{"line":431,"column":16},"end":{"line":432,"column":51}},"170":{"start":{"line":432,"column":20},"end":{"line":432,"column":51}},"171":{"start":{"line":433,"column":16},"end":{"line":434,"column":26}},"172":{"start":{"line":434,"column":20},"end":{"line":434,"column":26}},"173":{"start":{"line":435,"column":16},"end":{"line":435,"column":70}},"174":{"start":{"line":436,"column":16},"end":{"line":438,"column":17}},"175":{"start":{"line":437,"column":20},"end":{"line":437,"column":26}},"176":{"start":{"line":439,"column":16},"end":{"line":439,"column":56}},"177":{"start":{"line":441,"column":12},"end":{"line":441,"column":22}},"178":{"start":{"line":444,"column":8},"end":{"line":451,"column":9}},"179":{"start":{"line":445,"column":12},"end":{"line":450,"column":13}},"180":{"start":{"line":445,"column":33},"end":{"line":450,"column":13}},"181":{"start":{"line":445,"column":62},"end":{"line":450,"column":13}},"182":{"start":{"line":446,"column":16},"end":{"line":446,"column":36}},"183":{"start":{"line":448,"column":16},"end":{"line":449,"column":39}},"184":{"start":{"line":449,"column":20},"end":{"line":449,"column":39}},"185":{"start":{"line":470,"column":8},"end":{"line":488,"column":9}},"186":{"start":{"line":471,"column":12},"end":{"line":471,"column":88}},"187":{"start":{"line":472,"column":12},"end":{"line":472,"column":50}},"188":{"start":{"line":473,"column":12},"end":{"line":473,"column":85}},"189":{"start":{"line":474,"column":12},"end":{"line":487,"column":92}},"190":{"start":{"line":475,"column":16},"end":{"line":475,"column":30}},"191":{"start":{"line":476,"column":16},"end":{"line":484,"column":17}},"192":{"start":{"line":479,"column":24},"end":{"line":479,"column":113}},"193":{"start":{"line":481,"column":24},"end":{"line":481,"column":44}},"194":{"start":{"line":485,"column":16},"end":{"line":485,"column":28}},"195":{"start":{"line":487,"column":16},"end":{"line":487,"column":92}},"196":{"start":{"line":490,"column":8},"end":{"line":503,"column":9}},"197":{"start":{"line":491,"column":12},"end":{"line":492,"column":48}},"198":{"start":{"line":492,"column":16},"end":{"line":492,"column":48}},"199":{"start":{"line":493,"column":12},"end":{"line":493,"column":88}},"200":{"start":{"line":494,"column":12},"end":{"line":494,"column":48}},"201":{"start":{"line":496,"column":12},"end":{"line":496,"column":66}},"202":{"start":{"line":498,"column":12},"end":{"line":498,"column":35}},"203":{"start":{"line":499,"column":12},"end":{"line":499,"column":59}},"204":{"start":{"line":500,"column":12},"end":{"line":500,"column":69}},"205":{"start":{"line":501,"column":12},"end":{"line":501,"column":18}},"206":{"start":{"line":502,"column":12},"end":{"line":502,"column":25}},"207":{"start":{"line":505,"column":8},"end":{"line":536,"column":9}},"208":{"start":{"line":506,"column":12},"end":{"line":507,"column":81}},"209":{"start":{"line":507,"column":16},"end":{"line":507,"column":81}},"210":{"start":{"line":508,"column":12},"end":{"line":535,"column":14}},"211":{"start":{"line":509,"column":16},"end":{"line":509,"column":52}},"212":{"start":{"line":510,"column":16},"end":{"line":514,"column":17}},"213":{"start":{"line":511,"column":20},"end":{"line":511,"column":95}},"214":{"start":{"line":512,"column":20},"end":{"line":512,"column":62}},"215":{"start":{"line":513,"column":20},"end":{"line":513,"column":26}},"216":{"start":{"line":515,"column":16},"end":{"line":516,"column":51}},"217":{"start":{"line":516,"column":20},"end":{"line":516,"column":51}},"218":{"start":{"line":517,"column":16},"end":{"line":518,"column":26}},"219":{"start":{"line":518,"column":20},"end":{"line":518,"column":26}},"220":{"start":{"line":519,"column":16},"end":{"line":519,"column":59}},"221":{"start":{"line":520,"column":16},"end":{"line":521,"column":26}},"222":{"start":{"line":521,"column":20},"end":{"line":521,"column":26}},"223":{"start":{"line":522,"column":16},"end":{"line":534,"column":17}},"224":{"start":{"line":528,"column":24},"end":{"line":530,"column":25}},"225":{"start":{"line":529,"column":28},"end":{"line":529,"column":52}},"226":{"start":{"line":538,"column":8},"end":{"line":543,"column":9}},"227":{"start":{"line":539,"column":12},"end":{"line":541,"column":31}},"228":{"start":{"line":540,"column":16},"end":{"line":541,"column":31}},"229":{"start":{"line":541,"column":20},"end":{"line":541,"column":31}},"230":{"start":{"line":542,"column":12},"end":{"line":542,"column":24}},"231":{"start":{"line":545,"column":8},"end":{"line":552,"column":9}},"232":{"start":{"line":546,"column":12},"end":{"line":551,"column":13}},"233":{"start":{"line":546,"column":34},"end":{"line":551,"column":13}},"234":{"start":{"line":547,"column":16},"end":{"line":547,"column":37}},"235":{"start":{"line":549,"column":16},"end":{"line":549,"column":151}},"236":{"start":{"line":550,"column":16},"end":{"line":550,"column":32}},"237":{"start":{"line":554,"column":8},"end":{"line":573,"column":9}},"238":{"start":{"line":555,"column":12},"end":{"line":555,"column":46}},"239":{"start":{"line":556,"column":12},"end":{"line":556,"column":40}},"240":{"start":{"line":557,"column":12},"end":{"line":557,"column":37}},"241":{"start":{"line":558,"column":12},"end":{"line":558,"column":37}},"242":{"start":{"line":559,"column":12},"end":{"line":559,"column":54}},"243":{"start":{"line":560,"column":12},"end":{"line":560,"column":28}},"244":{"start":{"line":561,"column":12},"end":{"line":561,"column":30}},"245":{"start":{"line":562,"column":12},"end":{"line":562,"column":33}},"246":{"start":{"line":563,"column":12},"end":{"line":563,"column":42}},"247":{"start":{"line":564,"column":12},"end":{"line":572,"column":13}},"248":{"start":{"line":565,"column":16},"end":{"line":565,"column":39}},"249":{"start":{"line":566,"column":16},"end":{"line":566,"column":38}},"250":{"start":{"line":567,"column":16},"end":{"line":567,"column":37}},"251":{"start":{"line":568,"column":16},"end":{"line":568,"column":38}},"252":{"start":{"line":570,"column":16},"end":{"line":570,"column":60}},"253":{"start":{"line":571,"column":16},"end":{"line":571,"column":46}},"254":{"start":{"line":574,"column":8},"end":{"line":600,"column":9}},"255":{"start":{"line":575,"column":12},"end":{"line":575,"column":35}},"256":{"start":{"line":577,"column":12},"end":{"line":599,"column":25}},"257":{"start":{"line":578,"column":16},"end":{"line":598,"column":17}},"258":{"start":{"line":579,"column":20},"end":{"line":582,"column":21}},"259":{"start":{"line":580,"column":24},"end":{"line":580,"column":44}},"260":{"start":{"line":581,"column":24},"end":{"line":581,"column":43}},"261":{"start":{"line":583,"column":23},"end":{"line":598,"column":17}},"262":{"start":{"line":584,"column":20},"end":{"line":584,"column":29}},"263":{"start":{"line":585,"column":20},"end":{"line":597,"column":21}},"264":{"start":{"line":586,"column":24},"end":{"line":596,"column":61}},"265":{"start":{"line":588,"column":28},"end":{"line":594,"column":30}},"266":{"start":{"line":591,"column":36},"end":{"line":591,"column":76}},"267":{"start":{"line":596,"column":28},"end":{"line":596,"column":61}},"268":{"start":{"line":604,"column":8},"end":{"line":621,"column":9}},"269":{"start":{"line":605,"column":12},"end":{"line":605,"column":34}},"270":{"start":{"line":606,"column":12},"end":{"line":612,"column":13}},"271":{"start":{"line":607,"column":16},"end":{"line":609,"column":21}},"272":{"start":{"line":608,"column":20},"end":{"line":608,"column":76}},"273":{"start":{"line":610,"column":16},"end":{"line":611,"column":59}},"274":{"start":{"line":611,"column":20},"end":{"line":611,"column":59}},"275":{"start":{"line":613,"column":12},"end":{"line":613,"column":35}},"276":{"start":{"line":614,"column":12},"end":{"line":615,"column":43}},"277":{"start":{"line":615,"column":16},"end":{"line":615,"column":43}},"278":{"start":{"line":616,"column":12},"end":{"line":620,"column":14}},"279":{"start":{"line":624,"column":8},"end":{"line":641,"column":9}},"280":{"start":{"line":625,"column":12},"end":{"line":625,"column":34}},"281":{"start":{"line":626,"column":12},"end":{"line":627,"column":44}},"282":{"start":{"line":627,"column":16},"end":{"line":627,"column":44}},"283":{"start":{"line":628,"column":12},"end":{"line":630,"column":14}},"284":{"start":{"line":631,"column":12},"end":{"line":640,"column":13}},"285":{"start":{"line":632,"column":16},"end":{"line":639,"column":17}},"286":{"start":{"line":633,"column":20},"end":{"line":633,"column":56}},"287":{"start":{"line":634,"column":20},"end":{"line":638,"column":21}},"288":{"start":{"line":635,"column":24},"end":{"line":635,"column":59}},"289":{"start":{"line":636,"column":24},"end":{"line":636,"column":47}},"290":{"start":{"line":637,"column":24},"end":{"line":637,"column":50}},"291":{"start":{"line":657,"column":8},"end":{"line":678,"column":9}},"292":{"start":{"line":658,"column":12},"end":{"line":660,"column":53}},"293":{"start":{"line":662,"column":12},"end":{"line":670,"column":13}},"294":{"start":{"line":663,"column":16},"end":{"line":663,"column":37}},"295":{"start":{"line":664,"column":16},"end":{"line":664,"column":59}},"296":{"start":{"line":665,"column":16},"end":{"line":665,"column":35}},"297":{"start":{"line":666,"column":16},"end":{"line":666,"column":39}},"298":{"start":{"line":667,"column":16},"end":{"line":667,"column":41}},"299":{"start":{"line":669,"column":16},"end":{"line":669,"column":64}},"300":{"start":{"line":671,"column":12},"end":{"line":671,"column":86}},"301":{"start":{"line":672,"column":12},"end":{"line":672,"column":111}},"302":{"start":{"line":673,"column":12},"end":{"line":673,"column":84}},"303":{"start":{"line":674,"column":12},"end":{"line":674,"column":35}},"304":{"start":{"line":675,"column":12},"end":{"line":675,"column":59}},"305":{"start":{"line":676,"column":12},"end":{"line":676,"column":74}},"306":{"start":{"line":677,"column":12},"end":{"line":677,"column":18}},"307":{"start":{"line":684,"column":8},"end":{"line":684,"column":47}},"308":{"start":{"line":700,"column":8},"end":{"line":712,"column":9}},"309":{"start":{"line":701,"column":12},"end":{"line":711,"column":13}},"310":{"start":{"line":703,"column":20},"end":{"line":703,"column":90}},"311":{"start":{"line":704,"column":20},"end":{"line":704,"column":32}},"312":{"start":{"line":707,"column":20},"end":{"line":708,"column":97}},"313":{"start":{"line":708,"column":24},"end":{"line":708,"column":97}},"314":{"start":{"line":709,"column":20},"end":{"line":709,"column":53}},"315":{"start":{"line":751,"column":8},"end":{"line":765,"column":9}},"316":{"start":{"line":752,"column":12},"end":{"line":752,"column":119}},"317":{"start":{"line":753,"column":12},"end":{"line":764,"column":13}},"318":{"start":{"line":757,"column":20},"end":{"line":762,"column":22}},"319":{"start":{"line":758,"column":24},"end":{"line":758,"column":76}},"320":{"start":{"line":759,"column":24},"end":{"line":760,"column":67}},"321":{"start":{"line":760,"column":28},"end":{"line":760,"column":67}},"322":{"start":{"line":761,"column":24},"end":{"line":761,"column":37}},"323":{"start":{"line":767,"column":8},"end":{"line":769,"column":9}},"324":{"start":{"line":768,"column":12},"end":{"line":768,"column":80}},"325":{"start":{"line":776,"column":8},"end":{"line":791,"column":9}},"326":{"start":{"line":778,"column":12},"end":{"line":790,"column":13}},"327":{"start":{"line":780,"column":20},"end":{"line":781,"column":36}},"328":{"start":{"line":781,"column":24},"end":{"line":781,"column":36}},"329":{"start":{"line":782,"column":20},"end":{"line":782,"column":76}},"330":{"start":{"line":783,"column":20},"end":{"line":783,"column":42}},"331":{"start":{"line":786,"column":20},"end":{"line":787,"column":57}},"332":{"start":{"line":787,"column":24},"end":{"line":787,"column":57}},"333":{"start":{"line":788,"column":20},"end":{"line":788,"column":63}},"334":{"start":{"line":810,"column":8},"end":{"line":821,"column":9}},"335":{"start":{"line":811,"column":12},"end":{"line":811,"column":95}},"336":{"start":{"line":812,"column":12},"end":{"line":812,"column":99}},"337":{"start":{"line":813,"column":12},"end":{"line":813,"column":90}},"338":{"start":{"line":814,"column":12},"end":{"line":814,"column":91}},"339":{"start":{"line":815,"column":12},"end":{"line":820,"column":13}},"340":{"start":{"line":840,"column":8},"end":{"line":849,"column":9}},"341":{"start":{"line":841,"column":12},"end":{"line":841,"column":92}},"342":{"start":{"line":842,"column":12},"end":{"line":842,"column":95}},"343":{"start":{"line":843,"column":12},"end":{"line":848,"column":13}},"344":{"start":{"line":846,"column":20},"end":{"line":846,"column":55}},"345":{"start":{"line":880,"column":8},"end":{"line":898,"column":9}},"346":{"start":{"line":881,"column":12},"end":{"line":881,"column":196}},"347":{"start":{"line":882,"column":12},"end":{"line":897,"column":13}},"348":{"start":{"line":884,"column":20},"end":{"line":884,"column":68}},"349":{"start":{"line":885,"column":20},"end":{"line":885,"column":101}},"350":{"start":{"line":886,"column":20},"end":{"line":887,"column":35}},"351":{"start":{"line":887,"column":24},"end":{"line":887,"column":35}},"352":{"start":{"line":888,"column":20},"end":{"line":888,"column":55}},"353":{"start":{"line":891,"column":20},"end":{"line":891,"column":68}},"354":{"start":{"line":892,"column":20},"end":{"line":892,"column":101}},"355":{"start":{"line":893,"column":20},"end":{"line":894,"column":57}},"356":{"start":{"line":894,"column":24},"end":{"line":894,"column":57}},"357":{"start":{"line":895,"column":20},"end":{"line":895,"column":98}},"358":{"start":{"line":957,"column":8},"end":{"line":990,"column":9}},"359":{"start":{"line":958,"column":12},"end":{"line":958,"column":136}},"360":{"start":{"line":959,"column":12},"end":{"line":959,"column":35}},"361":{"start":{"line":960,"column":12},"end":{"line":960,"column":40}},"362":{"start":{"line":961,"column":12},"end":{"line":974,"column":13}},"363":{"start":{"line":962,"column":16},"end":{"line":962,"column":34}},"364":{"start":{"line":963,"column":16},"end":{"line":963,"column":154}},"365":{"start":{"line":964,"column":16},"end":{"line":964,"column":117}},"366":{"start":{"line":965,"column":16},"end":{"line":973,"column":17}},"367":{"start":{"line":966,"column":20},"end":{"line":966,"column":53}},"368":{"start":{"line":968,"column":20},"end":{"line":968,"column":67}},"369":{"start":{"line":969,"column":20},"end":{"line":969,"column":140}},"370":{"start":{"line":970,"column":20},"end":{"line":970,"column":78}},"371":{"start":{"line":971,"column":20},"end":{"line":971,"column":77}},"372":{"start":{"line":972,"column":20},"end":{"line":972,"column":151}},"373":{"start":{"line":975,"column":12},"end":{"line":989,"column":13}},"374":{"start":{"line":977,"column":20},"end":{"line":978,"column":36}},"375":{"start":{"line":978,"column":24},"end":{"line":978,"column":36}},"376":{"start":{"line":979,"column":20},"end":{"line":979,"column":71}},"377":{"start":{"line":982,"column":20},"end":{"line":983,"column":36}},"378":{"start":{"line":983,"column":24},"end":{"line":983,"column":36}},"379":{"start":{"line":984,"column":20},"end":{"line":987,"column":64}},"380":{"start":{"line":985,"column":24},"end":{"line":985,"column":51}},"381":{"start":{"line":987,"column":24},"end":{"line":987,"column":64}},"382":{"start":{"line":992,"column":8},"end":{"line":996,"column":9}},"383":{"start":{"line":993,"column":12},"end":{"line":995,"column":13}},"384":{"start":{"line":994,"column":16},"end":{"line":994,"column":64}},"385":{"start":{"line":1027,"column":8},"end":{"line":1048,"column":9}},"386":{"start":{"line":1028,"column":12},"end":{"line":1028,"column":60}},"387":{"start":{"line":1029,"column":12},"end":{"line":1029,"column":90}},"388":{"start":{"line":1030,"column":12},"end":{"line":1030,"column":109}},"389":{"start":{"line":1031,"column":12},"end":{"line":1047,"column":13}},"390":{"start":{"line":1033,"column":20},"end":{"line":1033,"column":98}},"391":{"start":{"line":1034,"column":20},"end":{"line":1034,"column":56}},"392":{"start":{"line":1037,"column":20},"end":{"line":1038,"column":75}},"393":{"start":{"line":1038,"column":24},"end":{"line":1038,"column":75}},"394":{"start":{"line":1039,"column":20},"end":{"line":1045,"column":21}},"395":{"start":{"line":1042,"column":28},"end":{"line":1042,"column":83}},"396":{"start":{"line":1050,"column":8},"end":{"line":1052,"column":9}},"397":{"start":{"line":1051,"column":12},"end":{"line":1051,"column":97}},"398":{"start":{"line":1062,"column":8},"end":{"line":1111,"column":9}},"399":{"start":{"line":1063,"column":12},"end":{"line":1063,"column":60}},"400":{"start":{"line":1064,"column":12},"end":{"line":1064,"column":90}},"401":{"start":{"line":1065,"column":12},"end":{"line":1065,"column":109}},"402":{"start":{"line":1066,"column":12},"end":{"line":1110,"column":13}},"403":{"start":{"line":1068,"column":20},"end":{"line":1068,"column":83}},"404":{"start":{"line":1069,"column":20},"end":{"line":1069,"column":44}},"405":{"start":{"line":1070,"column":20},"end":{"line":1070,"column":35}},"406":{"start":{"line":1071,"column":20},"end":{"line":1076,"column":67}},"407":{"start":{"line":1072,"column":24},"end":{"line":1074,"column":26}},"408":{"start":{"line":1073,"column":28},"end":{"line":1073,"column":70}},"409":{"start":{"line":1075,"column":25},"end":{"line":1076,"column":67}},"410":{"start":{"line":1076,"column":24},"end":{"line":1076,"column":67}},"411":{"start":{"line":1077,"column":20},"end":{"line":1077,"column":33}},"412":{"start":{"line":1080,"column":20},"end":{"line":1081,"column":76}},"413":{"start":{"line":1081,"column":24},"end":{"line":1081,"column":76}},"414":{"start":{"line":1082,"column":20},"end":{"line":1082,"column":54}},"415":{"start":{"line":1083,"column":20},"end":{"line":1108,"column":21}},"416":{"start":{"line":1085,"column":28},"end":{"line":1085,"column":50}},"417":{"start":{"line":1088,"column":28},"end":{"line":1089,"column":53}},"418":{"start":{"line":1089,"column":32},"end":{"line":1089,"column":53}},"419":{"start":{"line":1090,"column":28},"end":{"line":1090,"column":59}},"420":{"start":{"line":1091,"column":28},"end":{"line":1091,"column":40}},"421":{"start":{"line":1092,"column":28},"end":{"line":1099,"column":45}},"422":{"start":{"line":1096,"column":32},"end":{"line":1096,"column":48}},"423":{"start":{"line":1097,"column":32},"end":{"line":1097,"column":51}},"424":{"start":{"line":1099,"column":32},"end":{"line":1099,"column":45}},"425":{"start":{"line":1100,"column":28},"end":{"line":1104,"column":65}},"426":{"start":{"line":1101,"column":32},"end":{"line":1104,"column":65}},"427":{"start":{"line":1102,"column":36},"end":{"line":1102,"column":68}},"428":{"start":{"line":1104,"column":36},"end":{"line":1104,"column":65}},"429":{"start":{"line":1105,"column":28},"end":{"line":1105,"column":48}},"430":{"start":{"line":1116,"column":8},"end":{"line":1138,"column":9}},"431":{"start":{"line":1142,"column":4},"end":{"line":1148,"column":5}},"432":{"start":{"line":1143,"column":8},"end":{"line":1143,"column":36}},"433":{"start":{"line":1144,"column":11},"end":{"line":1148,"column":5}},"434":{"start":{"line":1145,"column":8},"end":{"line":1145,"column":42}},"435":{"start":{"line":1147,"column":8},"end":{"line":1147,"column":33}},"436":{"start":{"line":1149,"column":16},"end":{"line":1149,"column":28}}},"branchMap":{"1":{"line":6,"type":"cond-expr","locations":[{"start":{"line":6,"column":51},"end":{"line":6,"column":65}},{"start":{"line":6,"column":68},"end":{"line":6,"column":82}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":12}},{"start":{"line":11,"column":12},"end":{"line":11,"column":12}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":16},"end":{"line":18,"column":16}},{"start":{"line":18,"column":16},"end":{"line":18,"column":16}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":12}},{"start":{"line":27,"column":12},"end":{"line":27,"column":12}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":50},"end":{"line":28,"column":57}},{"start":{"line":28,"column":61},"end":{"line":28,"column":76}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":12}},{"start":{"line":33,"column":12},"end":{"line":33,"column":12}}]},"7":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":16}},{"start":{"line":39,"column":16},"end":{"line":39,"column":16}}]},"8":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":20},"end":{"line":40,"column":20}},{"start":{"line":40,"column":20},"end":{"line":40,"column":20}}]},"9":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":20},"end":{"line":46,"column":20}},{"start":{"line":46,"column":20},"end":{"line":46,"column":20}}]},"10":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":12}},{"start":{"line":56,"column":12},"end":{"line":56,"column":12}}]},"11":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":19},"end":{"line":58,"column":44}},{"start":{"line":58,"column":48},"end":{"line":58,"column":75}}]},"12":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":25},"end":{"line":166,"column":32}},{"start":{"line":166,"column":36},"end":{"line":168,"column":17}}]},"13":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":12}},{"start":{"line":172,"column":12},"end":{"line":172,"column":12}}]},"14":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":16},"end":{"line":174,"column":16}},{"start":{"line":174,"column":16},"end":{"line":174,"column":16}}]},"15":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":20},"end":{"line":174,"column":21}},{"start":{"line":174,"column":25},"end":{"line":174,"column":48}}]},"16":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":12},"end":{"line":211,"column":12}},{"start":{"line":211,"column":12},"end":{"line":211,"column":12}}]},"17":{"line":213,"type":"cond-expr","locations":[{"start":{"line":213,"column":49},"end":{"line":213,"column":70}},{"start":{"line":213,"column":73},"end":{"line":213,"column":77}}]},"18":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":12},"end":{"line":228,"column":12}},{"start":{"line":228,"column":12},"end":{"line":228,"column":12}}]},"19":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":12},"end":{"line":237,"column":12}},{"start":{"line":237,"column":12},"end":{"line":237,"column":12}}]},"20":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":16},"end":{"line":237,"column":38}},{"start":{"line":237,"column":42},"end":{"line":237,"column":70}},{"start":{"line":238,"column":19},"end":{"line":238,"column":35}},{"start":{"line":239,"column":19},"end":{"line":239,"column":43}},{"start":{"line":239,"column":47},"end":{"line":239,"column":77}}]},"21":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":16},"end":{"line":243,"column":16}},{"start":{"line":243,"column":16},"end":{"line":243,"column":16}}]},"22":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":28},"end":{"line":258,"column":28}},{"start":{"line":258,"column":28},"end":{"line":258,"column":28}}]},"23":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":12},"end":{"line":270,"column":12}},{"start":{"line":270,"column":12},"end":{"line":270,"column":12}}]},"24":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":16},"end":{"line":270,"column":21}},{"start":{"line":270,"column":25},"end":{"line":270,"column":76}}]},"25":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":12},"end":{"line":272,"column":12}},{"start":{"line":272,"column":12},"end":{"line":272,"column":12}}]},"26":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":16},"end":{"line":272,"column":20}},{"start":{"line":272,"column":24},"end":{"line":272,"column":63}}]},"27":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":12},"end":{"line":277,"column":12}},{"start":{"line":277,"column":12},"end":{"line":277,"column":12}}]},"28":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":16},"end":{"line":277,"column":26}},{"start":{"line":277,"column":30},"end":{"line":277,"column":45}},{"start":{"line":277,"column":49},"end":{"line":277,"column":64}}]},"29":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":22},"end":{"line":298,"column":44}},{"start":{"line":298,"column":48},"end":{"line":298,"column":76}}]},"30":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":12},"end":{"line":301,"column":12}},{"start":{"line":301,"column":12},"end":{"line":301,"column":12}}]},"31":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":16},"end":{"line":301,"column":21}},{"start":{"line":301,"column":25},"end":{"line":301,"column":64}}]},"32":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12}},{"start":{"line":317,"column":12},"end":{"line":317,"column":12}}]},"33":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":12},"end":{"line":319,"column":12}},{"start":{"line":319,"column":12},"end":{"line":319,"column":12}}]},"34":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":12},"end":{"line":321,"column":12}},{"start":{"line":321,"column":12},"end":{"line":321,"column":12}}]},"35":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":12},"end":{"line":323,"column":12}},{"start":{"line":323,"column":12},"end":{"line":323,"column":12}}]},"36":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":16},"end":{"line":323,"column":33}},{"start":{"line":323,"column":37},"end":{"line":323,"column":68}}]},"37":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":19},"end":{"line":345,"column":24}},{"start":{"line":345,"column":28},"end":{"line":345,"column":41}},{"start":{"line":345,"column":45},"end":{"line":345,"column":56}}]},"38":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":19},"end":{"line":349,"column":24}},{"start":{"line":349,"column":28},"end":{"line":349,"column":44}},{"start":{"line":349,"column":48},"end":{"line":349,"column":66}}]},"39":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":19},"end":{"line":353,"column":49}},{"start":{"line":353,"column":53},"end":{"line":353,"column":74}}]},"40":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":20},"end":{"line":357,"column":50}},{"start":{"line":357,"column":54},"end":{"line":357,"column":84}}]},"41":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":20},"end":{"line":365,"column":20}},{"start":{"line":365,"column":20},"end":{"line":365,"column":20}}]},"42":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":24},"end":{"line":365,"column":71}},{"start":{"line":365,"column":75},"end":{"line":365,"column":122}}]},"43":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":16},"end":{"line":374,"column":16}},{"start":{"line":374,"column":16},"end":{"line":374,"column":16}}]},"44":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":22},"end":{"line":395,"column":44}},{"start":{"line":395,"column":48},"end":{"line":395,"column":70}}]},"45":{"line":396,"type":"cond-expr","locations":[{"start":{"line":396,"column":49},"end":{"line":396,"column":53}},{"start":{"line":396,"column":56},"end":{"line":396,"column":60}}]},"46":{"line":397,"type":"cond-expr","locations":[{"start":{"line":397,"column":50},"end":{"line":397,"column":54}},{"start":{"line":397,"column":57},"end":{"line":397,"column":61}}]},"47":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":12},"end":{"line":398,"column":12}},{"start":{"line":398,"column":12},"end":{"line":398,"column":12}}]},"48":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":16},"end":{"line":399,"column":16}},{"start":{"line":399,"column":16},"end":{"line":399,"column":16}}]},"49":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":21},"end":{"line":401,"column":21}},{"start":{"line":401,"column":21},"end":{"line":401,"column":21}}]},"50":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":19},"end":{"line":403,"column":19}},{"start":{"line":403,"column":19},"end":{"line":403,"column":19}}]},"51":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":12},"end":{"line":407,"column":12}},{"start":{"line":407,"column":12},"end":{"line":407,"column":12}}]},"52":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":22},"end":{"line":415,"column":28}},{"start":{"line":415,"column":32},"end":{"line":415,"column":58}}]},"53":{"line":416,"type":"binary-expr","locations":[{"start":{"line":416,"column":22},"end":{"line":416,"column":25}},{"start":{"line":416,"column":29},"end":{"line":416,"column":52}}]},"54":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":12},"end":{"line":418,"column":12}},{"start":{"line":418,"column":12},"end":{"line":418,"column":12}}]},"55":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":16},"end":{"line":426,"column":16}},{"start":{"line":426,"column":16},"end":{"line":426,"column":16}}]},"56":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":16},"end":{"line":431,"column":16}},{"start":{"line":431,"column":16},"end":{"line":431,"column":16}}]},"57":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":16},"end":{"line":433,"column":16}},{"start":{"line":433,"column":16},"end":{"line":433,"column":16}}]},"58":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":16},"end":{"line":436,"column":16}},{"start":{"line":436,"column":16},"end":{"line":436,"column":16}}]},"59":{"line":439,"type":"binary-expr","locations":[{"start":{"line":439,"column":20},"end":{"line":439,"column":36}},{"start":{"line":439,"column":40},"end":{"line":439,"column":43}}]},"60":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":33},"end":{"line":445,"column":33}},{"start":{"line":445,"column":33},"end":{"line":445,"column":33}}]},"61":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":62},"end":{"line":445,"column":62}},{"start":{"line":445,"column":62},"end":{"line":445,"column":62}}]},"62":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":16},"end":{"line":448,"column":16}},{"start":{"line":448,"column":16},"end":{"line":448,"column":16}}]},"63":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":12},"end":{"line":474,"column":12}},{"start":{"line":474,"column":12},"end":{"line":474,"column":12}}]},"64":{"line":483,"type":"binary-expr","locations":[{"start":{"line":483,"column":20},"end":{"line":483,"column":28}},{"start":{"line":483,"column":32},"end":{"line":483,"column":44}}]},"65":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":12},"end":{"line":491,"column":12}},{"start":{"line":491,"column":12},"end":{"line":491,"column":12}}]},"66":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":16},"end":{"line":491,"column":29}},{"start":{"line":491,"column":33},"end":{"line":491,"column":51}}]},"67":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":12},"end":{"line":506,"column":12}},{"start":{"line":506,"column":12},"end":{"line":506,"column":12}}]},"68":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":16},"end":{"line":510,"column":16}},{"start":{"line":510,"column":16},"end":{"line":510,"column":16}}]},"69":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":16},"end":{"line":515,"column":16}},{"start":{"line":515,"column":16},"end":{"line":515,"column":16}}]},"70":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":16},"end":{"line":517,"column":16}},{"start":{"line":517,"column":16},"end":{"line":517,"column":16}}]},"71":{"line":519,"type":"binary-expr","locations":[{"start":{"line":519,"column":31},"end":{"line":519,"column":47}},{"start":{"line":519,"column":51},"end":{"line":519,"column":59}}]},"72":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":16},"end":{"line":520,"column":16}},{"start":{"line":520,"column":16},"end":{"line":520,"column":16}}]},"73":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":24},"end":{"line":528,"column":24}},{"start":{"line":528,"column":24},"end":{"line":528,"column":24}}]},"74":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":16},"end":{"line":540,"column":16}},{"start":{"line":540,"column":16},"end":{"line":540,"column":16}}]},"75":{"line":540,"type":"binary-expr","locations":[{"start":{"line":540,"column":20},"end":{"line":540,"column":57}},{"start":{"line":540,"column":61},"end":{"line":540,"column":96}}]},"76":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":34},"end":{"line":546,"column":34}},{"start":{"line":546,"column":34},"end":{"line":546,"column":34}}]},"77":{"line":546,"type":"binary-expr","locations":[{"start":{"line":546,"column":38},"end":{"line":546,"column":60}},{"start":{"line":546,"column":64},"end":{"line":546,"column":92}}]},"78":{"line":559,"type":"binary-expr","locations":[{"start":{"line":559,"column":29},"end":{"line":559,"column":38}},{"start":{"line":559,"column":42},"end":{"line":559,"column":54}}]},"79":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":12},"end":{"line":564,"column":12}},{"start":{"line":564,"column":12},"end":{"line":564,"column":12}}]},"80":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":16},"end":{"line":578,"column":16}},{"start":{"line":578,"column":16},"end":{"line":578,"column":16}}]},"81":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":20},"end":{"line":579,"column":20}},{"start":{"line":579,"column":20},"end":{"line":579,"column":20}}]},"82":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":23},"end":{"line":583,"column":23}},{"start":{"line":583,"column":23},"end":{"line":583,"column":23}}]},"83":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":20},"end":{"line":585,"column":20}},{"start":{"line":585,"column":20},"end":{"line":585,"column":20}}]},"84":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":24},"end":{"line":586,"column":24}},{"start":{"line":586,"column":24},"end":{"line":586,"column":24}}]},"85":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":12},"end":{"line":606,"column":12}},{"start":{"line":606,"column":12},"end":{"line":606,"column":12}}]},"86":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":16},"end":{"line":610,"column":16}},{"start":{"line":610,"column":16},"end":{"line":610,"column":16}}]},"87":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":12},"end":{"line":614,"column":12}},{"start":{"line":614,"column":12},"end":{"line":614,"column":12}}]},"88":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":12},"end":{"line":626,"column":12}},{"start":{"line":626,"column":12},"end":{"line":626,"column":12}}]},"89":{"line":631,"type":"if","locations":[{"start":{"line":631,"column":12},"end":{"line":631,"column":12}},{"start":{"line":631,"column":12},"end":{"line":631,"column":12}}]},"90":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":20},"end":{"line":634,"column":20}},{"start":{"line":634,"column":20},"end":{"line":634,"column":20}}]},"91":{"line":659,"type":"binary-expr","locations":[{"start":{"line":659,"column":16},"end":{"line":659,"column":38}},{"start":{"line":660,"column":19},"end":{"line":660,"column":53}}]},"92":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":12},"end":{"line":662,"column":12}},{"start":{"line":662,"column":12},"end":{"line":662,"column":12}}]},"93":{"line":672,"type":"binary-expr","locations":[{"start":{"line":672,"column":22},"end":{"line":672,"column":48}},{"start":{"line":672,"column":52},"end":{"line":672,"column":58}},{"start":{"line":672,"column":62},"end":{"line":672,"column":84}}]},"94":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":20},"end":{"line":707,"column":20}},{"start":{"line":707,"column":20},"end":{"line":707,"column":20}}]},"95":{"line":752,"type":"binary-expr","locations":[{"start":{"line":752,"column":22},"end":{"line":752,"column":33}},{"start":{"line":752,"column":37},"end":{"line":752,"column":69}}]},"96":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":24},"end":{"line":759,"column":24}},{"start":{"line":759,"column":24},"end":{"line":759,"column":24}}]},"97":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":20},"end":{"line":780,"column":20}},{"start":{"line":780,"column":20},"end":{"line":780,"column":20}}]},"98":{"line":780,"type":"binary-expr","locations":[{"start":{"line":780,"column":24},"end":{"line":780,"column":38}},{"start":{"line":780,"column":42},"end":{"line":780,"column":61}}]},"99":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":20},"end":{"line":786,"column":20}},{"start":{"line":786,"column":20},"end":{"line":786,"column":20}}]},"100":{"line":786,"type":"binary-expr","locations":[{"start":{"line":786,"column":24},"end":{"line":786,"column":42}},{"start":{"line":786,"column":46},"end":{"line":786,"column":69}}]},"101":{"line":811,"type":"binary-expr","locations":[{"start":{"line":811,"column":22},"end":{"line":811,"column":26}},{"start":{"line":811,"column":30},"end":{"line":811,"column":54}}]},"102":{"line":812,"type":"cond-expr","locations":[{"start":{"line":812,"column":65},"end":{"line":812,"column":86}},{"start":{"line":812,"column":89},"end":{"line":812,"column":99}}]},"103":{"line":812,"type":"binary-expr","locations":[{"start":{"line":812,"column":26},"end":{"line":812,"column":37}},{"start":{"line":812,"column":41},"end":{"line":812,"column":60}}]},"104":{"line":881,"type":"binary-expr","locations":[{"start":{"line":881,"column":22},"end":{"line":881,"column":53}},{"start":{"line":881,"column":57},"end":{"line":881,"column":90}}]},"105":{"line":886,"type":"if","locations":[{"start":{"line":886,"column":20},"end":{"line":886,"column":20}},{"start":{"line":886,"column":20},"end":{"line":886,"column":20}}]},"106":{"line":886,"type":"binary-expr","locations":[{"start":{"line":886,"column":24},"end":{"line":886,"column":37}},{"start":{"line":886,"column":41},"end":{"line":886,"column":59}}]},"107":{"line":893,"type":"if","locations":[{"start":{"line":893,"column":20},"end":{"line":893,"column":20}},{"start":{"line":893,"column":20},"end":{"line":893,"column":20}}]},"108":{"line":893,"type":"binary-expr","locations":[{"start":{"line":893,"column":24},"end":{"line":893,"column":42}},{"start":{"line":893,"column":46},"end":{"line":893,"column":69}}]},"109":{"line":963,"type":"binary-expr","locations":[{"start":{"line":963,"column":26},"end":{"line":963,"column":52}},{"start":{"line":963,"column":56},"end":{"line":963,"column":64}}]},"110":{"line":964,"type":"binary-expr","locations":[{"start":{"line":964,"column":26},"end":{"line":964,"column":35}},{"start":{"line":964,"column":39},"end":{"line":964,"column":69}}]},"111":{"line":965,"type":"if","locations":[{"start":{"line":965,"column":16},"end":{"line":965,"column":16}},{"start":{"line":965,"column":16},"end":{"line":965,"column":16}}]},"112":{"line":970,"type":"binary-expr","locations":[{"start":{"line":970,"column":31},"end":{"line":970,"column":39}},{"start":{"line":970,"column":43},"end":{"line":970,"column":78}}]},"113":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":20},"end":{"line":977,"column":20}},{"start":{"line":977,"column":20},"end":{"line":977,"column":20}}]},"114":{"line":979,"type":"cond-expr","locations":[{"start":{"line":979,"column":34},"end":{"line":979,"column":64}},{"start":{"line":979,"column":67},"end":{"line":979,"column":71}}]},"115":{"line":982,"type":"if","locations":[{"start":{"line":982,"column":20},"end":{"line":982,"column":20}},{"start":{"line":982,"column":20},"end":{"line":982,"column":20}}]},"116":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":20},"end":{"line":984,"column":20}},{"start":{"line":984,"column":20},"end":{"line":984,"column":20}}]},"117":{"line":984,"type":"binary-expr","locations":[{"start":{"line":984,"column":24},"end":{"line":984,"column":48}},{"start":{"line":984,"column":52},"end":{"line":984,"column":81}}]},"118":{"line":1028,"type":"binary-expr","locations":[{"start":{"line":1028,"column":25},"end":{"line":1028,"column":35}},{"start":{"line":1028,"column":39},"end":{"line":1028,"column":60}}]},"119":{"line":1033,"type":"binary-expr","locations":[{"start":{"line":1033,"column":30},"end":{"line":1033,"column":32}},{"start":{"line":1033,"column":36},"end":{"line":1033,"column":50}},{"start":{"line":1033,"column":54},"end":{"line":1033,"column":65}}]},"120":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":20},"end":{"line":1037,"column":20}},{"start":{"line":1037,"column":20},"end":{"line":1037,"column":20}}]},"121":{"line":1051,"type":"binary-expr","locations":[{"start":{"line":1051,"column":19},"end":{"line":1051,"column":24}},{"start":{"line":1051,"column":28},"end":{"line":1051,"column":60}},{"start":{"line":1051,"column":64},"end":{"line":1051,"column":97}}]},"122":{"line":1063,"type":"binary-expr","locations":[{"start":{"line":1063,"column":25},"end":{"line":1063,"column":35}},{"start":{"line":1063,"column":39},"end":{"line":1063,"column":60}}]},"123":{"line":1068,"type":"binary-expr","locations":[{"start":{"line":1068,"column":30},"end":{"line":1068,"column":31}},{"start":{"line":1068,"column":35},"end":{"line":1068,"column":56}}]},"124":{"line":1071,"type":"if","locations":[{"start":{"line":1071,"column":20},"end":{"line":1071,"column":20}},{"start":{"line":1071,"column":20},"end":{"line":1071,"column":20}}]},"125":{"line":1080,"type":"if","locations":[{"start":{"line":1080,"column":20},"end":{"line":1080,"column":20}},{"start":{"line":1080,"column":20},"end":{"line":1080,"column":20}}]},"126":{"line":1080,"type":"binary-expr","locations":[{"start":{"line":1080,"column":24},"end":{"line":1080,"column":35}},{"start":{"line":1080,"column":39},"end":{"line":1080,"column":69}}]},"127":{"line":1088,"type":"if","locations":[{"start":{"line":1088,"column":28},"end":{"line":1088,"column":28}},{"start":{"line":1088,"column":28},"end":{"line":1088,"column":28}}]},"128":{"line":1092,"type":"if","locations":[{"start":{"line":1092,"column":28},"end":{"line":1092,"column":28}},{"start":{"line":1092,"column":28},"end":{"line":1092,"column":28}}]},"129":{"line":1101,"type":"if","locations":[{"start":{"line":1101,"column":32},"end":{"line":1101,"column":32}},{"start":{"line":1101,"column":32},"end":{"line":1101,"column":32}}]},"130":{"line":1142,"type":"if","locations":[{"start":{"line":1142,"column":4},"end":{"line":1142,"column":4}},{"start":{"line":1142,"column":4},"end":{"line":1142,"column":4}}]},"131":{"line":1144,"type":"if","locations":[{"start":{"line":1144,"column":11},"end":{"line":1144,"column":11}},{"start":{"line":1144,"column":11},"end":{"line":1144,"column":11}}]},"132":{"line":1144,"type":"binary-expr","locations":[{"start":{"line":1144,"column":15},"end":{"line":1144,"column":43}},{"start":{"line":1144,"column":47},"end":{"line":1144,"column":57}}]}},"code":["(function(g) {","    \"use strict\"","","    function mrFactory() {","        // Indicate properties should be skipped","        var SKIP = typeof Symbol !== \"undefined\" ? Symbol(\"SKIP\") : { SKIP: true }","/*"," * Generic utility functions"," */","        function GUARDED_NOOP(err) {","            if (err) // unguarded error...","                throw new Error(err)","        }","","        function  once(fn) {","            var fired = false","            return function() {","                if (!fired) {","                    fired = true","                    return fn.apply(null, arguments)","                }","                invariant(false, \"callback was invoked twice\")","            }","        }","","        function invariant(cond, message) {","            if (!cond)","                throw new Error(\"[serializr] \" + (message || \"Illegal State\"))","        }","","        function parallel(ar, processor, cb) {","            // TODO: limit parallelization?","            if (ar.length === 0)","                return void cb(null, [])","            var left = ar.length","            var resultArray = []","            var failed = false","            var processorCb = function(idx, err, result) {","                if (err) {","                    if (!failed) {","                        failed = true","                        cb(err)","                    }","                } else {","                    resultArray[idx] = result","                    if (--left === 0)","                        cb(null, resultArray)","                }","            }","            ar.forEach(function (value, idx) {","                processor(value, processorCb.bind(null, idx))","            })","        }","","        function isPrimitive(value) {","            if (value === null)","                return true","            return typeof value !== \"object\" && typeof value !== \"function\"","        }","","/*"," * ## Managing model schemas"," */","        /**","         * JSDOC type defintions for usage w/o typescript.","         * @typedef {object} PropSchema","         * @property {serializerFunction} serializer","         * @property {deserializerFunction} deserializer","         * @property {boolean} identifier","         *","         * @typedef {object} PropertyDescriptor","         * @param {*} value","         * @param {boolean} writeable","         * @param {Function|undefined} get","         * @param {Function|undefined} set","         * @param {boolean} configurable","         * @param {boolean} enumerable","         *","         * @callback serializerFunction","         * @param {*} sourcePropertyValue","         * @returns any - serialized object","         *","         *","         * @callback deserializerFunction","         * @param {*} jsonValue","         * @param {cpsCallback} callback","         * @param {Context} context","         * @param {*} currentPropertyValue","         * @returns void","         *","         * @callback RegisterFunction","         * @param {*} id","         * @param {object} target","         * @param {Context} context","         *","         * @callback cpsCallback","         * @param {*} result","         * @param {*} error","         * @returns void","         *","         * @callback RefLookupFunction","         * @param {string} id","         * @param {cpsCallback} callback","         * @returns void","         *","         * @typedef {object} ModelSchema","         * @param factory","         * @param props","         * @param targetClass","         */","","        /**","         * Creates a model schema that (de)serializes from / to plain javascript objects.","         * Its factory method is: `() => ({})`","         *","         * @example","         * var todoSchema = createSimpleSchema({","         *   title: true,","         *   done: true","         * });","         *","         * var json = serialize(todoSchema, { title: \"Test\", done: false })","         * var todo = deserialize(todoSchema, json)","         *","         * @param {object} props property mapping,","         * @returns {object} model schema","         */","        function createSimpleSchema(props) {","            return {","                factory: function() {","                    return {}","                },","                props: props","            }","        }","","        /**","         * Creates a model schema that (de)serializes an object created by a constructor function (class).","         * The created model schema is associated by the targeted type as default model schema, see setDefaultModelSchema.","         * Its factory method is `() => new clazz()` (unless overriden, see third arg).","         *","         * @example","         * function Todo(title, done) {","         *   this.title = title;","         *   this.done = done;","         * }","         *","         * createModelSchema(Todo, {","         *   title: true,","         *   done: true","         * })","         *","         * var json = serialize(new Todo(\"Test\", false))","         * var todo = deserialize(Todo, json)","         *","         * @param {constructor|class} clazz class or constructor function","         * @param {object} props property mapping","         * @param {function} factory optional custom factory. Receives context as first arg","         * @returns {object} model schema","         */","        function createModelSchema(clazz, props, factory) {","            invariant(clazz !== Object, \"one cannot simply put define a model schema for Object\")","            invariant(typeof clazz === \"function\", \"expected constructor function\")","            var model = {","                targetClass: clazz,","                factory: factory || function() {","                    return new clazz()","                },","                props: props","            }","            // find super model","            if (clazz.prototype.constructor !== Object) {","                var s = getDefaultModelSchema(clazz.prototype.constructor)","                if (s && s.targetClass !== clazz)","                    model.extends = s","            }","            setDefaultModelSchema(clazz, model)","            return model","        }","","        /**","         * Decorator that defines a new property mapping on the default model schema for the class","         * it is used in.","         *","         * When using typescript, the decorator can also be used on fields declared as constructor arguments (using the `private` / `protected` / `public` keywords).","         * The default factory will then invoke the constructor with the correct arguments as well.","         *","         * @example","         * class Todo {","         *   @serializable(primitive())","         *   title;","         *","         *   @serializable // shorthand for primitves","         *   done;","         *","         *   constructor(title, done) {","         *     this.title = title;","         *     this.done = done;","         *   }","         * }","         *","         * var json = serialize(new Todo(\"Test\", false))","         * var todo = deserialize(Todo, json)","         *","         * @param arg1","         * @param arg2","         * @param arg3","         * @returns {PropertyDescriptor}","         */","        function serializable(arg1, arg2, arg3) {","            if (arguments.length === 1) {","                // decorated with propSchema","                var propSchema = arg1 === true ? _defaultPrimitiveProp : arg1","                invariant(isPropSchema(propSchema), \"@serializable expects prop schema\")","                return serializableDecorator.bind(null, propSchema)","            } else {","                // decorated without arguments, treat as primitive","                return serializableDecorator(primitive(), arg1, arg2, arg3)","            }","        }","","        // Ugly way to get the parameter names since they aren't easily retrievable via reflection","        var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg","        var ARGUMENT_NAMES = /([^\\s,]+)/g","        function getParamNames(func) {","            var fnStr = func.toString().replace(STRIP_COMMENTS, \"\")","            var result = fnStr.slice(fnStr.indexOf(\"(\")+1, fnStr.indexOf(\")\")).match(ARGUMENT_NAMES)","            if(result === null)","                result = []","            return result","        }","","        function serializableDecorator(propSchema, target, propName, descriptor) {","            invariant(arguments.length >= 2, \"too few arguments. Please use @serializable as property decorator\")","            // Fix for @serializable used in class constructor params (typescript)","            var factory","            if (propName === undefined && typeof target === \"function\"","                && target.prototype","                && descriptor !== undefined && typeof descriptor === \"number\") {","                invariant(isPropSchema(propSchema), \"Constructor params must use alias(name)\")","                invariant(propSchema.jsonname, \"Constructor params must use alias(name)\")","                var paramNames = getParamNames(target)","                if (paramNames.length >= descriptor) {","                    propName = paramNames[descriptor];","                    propSchema.paramNumber = descriptor","                    descriptor = undefined","                    target = target.prototype","                    // Create a factory so the constructor is called properly","                    factory = function(context) {","                        function F(args) {","                            return target.constructor.apply(this, args)","                        }","                        F.prototype = target.constructor.prototype","                        var params = []","                        for (var i = 0; i < target.constructor.length; i++) {","                          Object.keys(context.modelSchema.props).forEach(function (key) {","                            var prop = context.modelSchema.props[key];","                            if (prop.paramNumber === i) {","                              params[i] = context.json[prop.jsonname];","                            }","                          });","                        }","                        return new F(params)","                    }","                }","            }","            invariant(typeof propName === \"string\", \"incorrect usage of @serializable decorator\")","            var info = getDefaultModelSchema(target)","","            if (!info || !target.constructor.hasOwnProperty(\"serializeInfo\"))","                info = createModelSchema(target.constructor, {}, factory)","            if (info && info.targetClass !== target.constructor)","                // fixes typescript issue that tends to copy fields from super constructor to sub constructor in extends","                info = createModelSchema(target.constructor, {}, factory)","            info.props[propName] = propSchema","            // MWE: why won't babel work without?","            if (descriptor && !descriptor.get && !descriptor.set)","                descriptor.writable = true","            return descriptor","        }","","        /**","         * The `serializeAll` decorator can be used on a class to signal that all primitive properties should be serialized automatically.","         *","         * @example","         * \\@serializeAll","         * class Store {","         *     a = 3","         *     b","         * }","         *","         * const store = new Store","         * store.c = 5","         * store.d = {}","         * t.deepEqual(serialize(store), { a: 3, b: undefined, c: 5})","         */","        function serializeAll(target) {","            invariant(arguments.length === 1 && typeof target === \"function\", \"@serializeAll can only be used as class decorator\")","","            var info = getDefaultModelSchema(target)","            if (!info || !target.hasOwnProperty(\"serializeInfo\")) {","                info = createModelSchema(target, {})","                setDefaultModelSchema(target, info)","            }","","            getDefaultModelSchema(target).props[\"*\"] = true","            return target","        }","","        /**","         * Returns the standard model schema associated with a class / constructor function","         *","         * @param {object} thing","         * @returns {ModelSchema} model schema","         */","        function getDefaultModelSchema(thing) {","            if (!thing)","                return null","            if (isModelSchema(thing))","                return thing","            if (isModelSchema(thing.serializeInfo))","                return thing.serializeInfo","            if (thing.constructor && thing.constructor.serializeInfo)","                return thing.constructor.serializeInfo","        }","","        /**","         * Sets the default model schema for class / constructor function.","         * Everywhere where a model schema is required as argument, this class / constructor function","         * can be passed in as well (for example when using `object` or `ref`.","         *","         * When passing an instance of this class to `serialize`, it is not required to pass the model schema","         * as first argument anymore, because the default schema will be inferred from the instance type.","         *","         * @param {constructor|class} clazz class or constructor function","         * @param {ModelSchema} modelSchema - a model schema","         * @returns {ModelSchema} model schema","         */","        function setDefaultModelSchema(clazz, modelSchema) {","            invariant(isModelSchema(modelSchema))","            return clazz.serializeInfo = modelSchema","        }","","        function isModelSchema(thing) {","            return thing && thing.factory && thing.props","        }","","        function isPropSchema(thing) {","            return thing && thing.serializer && thing.deserializer","        }","","        function isAliasedPropSchema(propSchema) {","            return typeof propSchema === \"object\" && !!propSchema.jsonname","        }","","        function isIdentifierPropSchema(propSchema) {","            return  typeof propSchema === \"object\" && propSchema.identifier === true","        }","","        function getIdentifierProp(modelSchema) {","            invariant(isModelSchema(modelSchema))","            // optimization: cache this lookup","            while (modelSchema) {","                for (var propName in modelSchema.props)","                    if (typeof modelSchema.props[propName] === \"object\" && modelSchema.props[propName].identifier === true)","                        return propName","                modelSchema = modelSchema.extends","            }","            return null","        }","","        function isAssignableTo(actualType, expectedType) {","            while (actualType) {","                if (actualType === expectedType)","                    return true","                actualType = actualType.extends","            }","            return false","        }","","/*"," * ## Serialization and deserialization"," */","","        /**","         * Serializes an object (graph) into json using the provided model schema.","         * The model schema can be omitted if the object type has a default model schema associated with it.","         * If a list of objects is provided, they should have an uniform type.","         *","         * @param arg1 modelschema to use. Optional","         * @param arg2 object(s) to serialize","         * @returns {object} serialized representation of the object","         */","        function serialize(arg1, arg2) {","            invariant(arguments.length === 1 || arguments.length === 2, \"serialize expects one or 2 arguments\")","            var thing = arguments.length === 1 ? arg1 : arg2","            var schema = arguments.length === 1 ? null : arg1","            if (Array.isArray(thing)) {","                if (thing.length === 0)","                    return [] // don't bother finding a schema","                else if (!schema)","                    schema = getDefaultModelSchema(thing[0])","            } else if (!schema) {","                schema = getDefaultModelSchema(thing)","            }","            invariant(!!schema, \"Failed to find default schema for \" + arg1)","            if (Array.isArray(thing))","                return thing.map(function (item) {","                    return serializeWithSchema(schema, item)","                })","            return serializeWithSchema(schema, thing)","        }","","        function serializeWithSchema(schema, obj) {","            invariant(schema && typeof schema === \"object\", \"Expected schema\")","            invariant(obj && typeof obj === \"object\", \"Expected object\")","            var res","            if (schema.extends)","                res = serializeWithSchema(schema.extends, obj)","            else {","// TODO, make invariant?:  invariant(!obj.constructor.prototype.constructor.serializeInfo, \"object has a serializable supertype, but modelschema did not provide extends clause\")","                res = {}","            }","            Object.keys(schema.props).forEach(function (key) {","                var propDef = schema.props[key]","                if (key === \"*\") {","                    invariant(propDef === true, \"prop schema '*' can onle be used with 'true'\")","                    serializeStarProps(schema, obj, res)","                    return","                }","                if (propDef === true)","                    propDef = _defaultPrimitiveProp","                if (propDef === false)","                    return","                var jsonValue = propDef.serializer(obj[key], key, obj)","                if (jsonValue === SKIP){","                    return","                }","                res[propDef.jsonname || key] = jsonValue","            })","            return res","        }","","        function serializeStarProps(schema, obj, target) {","            for (var key in obj) if (obj.hasOwnProperty(key)) if (!(key in schema.props)) {","                var value = obj[key]","                // when serializing only serialize primitive props. Assumes other props (without schema) are local state that doesn't need serialization","                if (isPrimitive(value))","                    target[key] = value","            }","        }","","/*"," * Deserialization"," */","","        /**","         * Deserializes a json structor into an object graph.","         * This process might be asynchronous (for example if there are references with an asynchronous","         * lookup function). The function returns an object (or array of objects), but the returned object","         * might be incomplete until the callback has fired as well (which might happen immediately)","         *","         * @param {object|array} schema to use for deserialization","         * @param {json} json data to deserialize","         * @param {function} callback node style callback that is invoked once the deserializaiton has finished.","         * First argument is the optional error, second argument is the deserialized object (same as the return value)","         * @param {*} customArgs custom arguments that are available as `context.args` during the deserialization process. This can be used as dependency injection mechanism to pass in, for example, stores.","         * @returns {object|array} deserialized object, possibly incomplete.","         */","        function deserialize(schema, json, callback, customArgs) {","            invariant(arguments.length >= 2, \"deserialize expects at least 2 arguments\")","            schema = getDefaultModelSchema(schema)","            invariant(isModelSchema(schema), \"first argument should be model schema\")","            if (Array.isArray(json)) {","                var items = []","                parallel(","                    json,","                    function (childJson, itemDone) {","                        var instance = deserializeObjectWithSchema(null, schema, childJson, itemDone, customArgs)","                        // instance is created synchronously so can be pushed","                        items.push(instance)","                    },","                    callback || GUARDED_NOOP","                )","                return items","            } else","                return deserializeObjectWithSchema(null, schema, json, callback, customArgs)","        }","","        function deserializeObjectWithSchema(parentContext, schema, json, callback, customArgs) {","            if (json === null || json === undefined)","                return void callback(null, null)","            var context = new Context(parentContext, schema, json, callback, customArgs)","            var target = schema.factory(context)","            // todo async invariant","            invariant(!!target, \"No object returned from factory\")","// TODO: make invariant?            invariant(schema.extends || !target.constructor.prototype.constructor.serializeInfo, \"object has a serializable supertype, but modelschema did not provide extends clause\")","            context.target = target","            var lock = context.createCallback(GUARDED_NOOP)","            deserializePropsWithSchema(context, schema, json, target)","            lock()","            return target","        }","","        function deserializePropsWithSchema(context, schema, json, target) {","            if (schema.extends)","                deserializePropsWithSchema(context, schema.extends, json, target)","            Object.keys(schema.props).forEach(function (propName) {","                var propDef = schema.props[propName]","                if (propName === \"*\") {","                    invariant(propDef === true, \"prop schema '*' can onle be used with 'true'\")","                    deserializeStarProps(schema, target, json)","                    return","                }","                if (propDef === true)","                    propDef = _defaultPrimitiveProp","                if (propDef === false)","                    return","                var jsonAttr = propDef.jsonname || propName","                if (!(jsonAttr in json))","                    return","                propDef.deserializer(","                    json[jsonAttr],","                    // for individual props, use root context based callbacks","                    // this allows props to complete after completing the object itself","                    // enabling reference resolving and such","                    context.rootContext.createCallback(function (value) {","                        if (value !== SKIP){","                            target[propName] = value","                        }","                    }),","                    context,","                    target[propName] // initial value","                )","            })","        }","","        function schemaHasAlias(schema, name) {","            for (var key in schema.props)","                if (typeof schema.props[key] === \"object\" && schema.props[key].jsonname === name)","                    return true","            return false","        }","","        function deserializeStarProps(schema, obj, json) {","            for (var key in json) if (!(key in schema.props) && !schemaHasAlias(schema, key)) {","                var value = json[key]","                // when deserializing we don't want to silently ignore 'unparseable data' to avoid confusing bugs","                invariant(isPrimitive(value), \"encountered non primitive value while deserializing '*' properties in property '\" + key + \"': \" + value)","                obj[key] = value","            }","        }","","        function Context(parentContext, modelSchema, json, onReadyCb, customArgs) {","            this.parentContext = parentContext","            this.isRoot = !parentContext","            this.pendingCallbacks = 0","            this.pendingRefsCount = 0","            this.onReadyCb = onReadyCb || GUARDED_NOOP","            this.json = json","            this.target = null","            this.hasError = false","            this.modelSchema = modelSchema","            if (this.isRoot) {","                this.rootContext = this","                this.args = customArgs","                this.pendingRefs = {} // uuid: [{ modelSchema, uuid, cb }]","                this.resolvedRefs = {} // uuid: [{ modelSchema, value }]","            } else {","                this.rootContext = parentContext.rootContext","                this.args = parentContext.args","            }","        }","        Context.prototype.createCallback = function (fn) {","            this.pendingCallbacks++","            // once: defend agains userland calling 'done' twice","            return once(function(err, value) {","                if (err) {","                    if (!this.hasError) {","                        this.hasError = true","                        this.onReadyCb(err)","                    }","                } else if (!this.hasError) {","                    fn(value)","                    if (--this.pendingCallbacks === this.pendingRefsCount) {","                        if (this.pendingRefsCount > 0)","                            // all pending callbacks are pending reference resolvers. not good.","                            this.onReadyCb(new Error(","                                \"Unresolvable references in json: \\\"\" +","                                Object.keys(this.pendingRefs).filter(function (uuid) {","                                    return this.pendingRefs[uuid].length > 0","                                }, this).join(\"\\\", \\\"\") +","                                 \"\\\"\"","                            ))","                        else","                            this.onReadyCb(null, this.target)","                    }","                }","            }.bind(this))","        }","","        // given an object with uuid, modelSchema, callback, awaits until the given uuid is available","        // resolve immediately if possible","        Context.prototype.await = function (modelSchema, uuid, callback) {","            invariant(this.isRoot)","            if (uuid in this.resolvedRefs) {","                var match = this.resolvedRefs[uuid].filter(function (resolved) {","                    return isAssignableTo(resolved.modelSchema, modelSchema)","                })[0]","                if (match)","                    return void callback(null, match.value)","            }","            this.pendingRefsCount++","            if (!this.pendingRefs[uuid])","                this.pendingRefs[uuid] = []","            this.pendingRefs[uuid].push({","                modelSchema: modelSchema,","                uuid: uuid,","                callback: callback","            })","        }","","        // given a modelschema, uuid and value, resolve all references that where looking for this object","        Context.prototype.resolve = function(modelSchema, uuid, value) {","            invariant(this.isRoot)","            if (!this.resolvedRefs[uuid])","                this.resolvedRefs[uuid] = []","            this.resolvedRefs[uuid].push({","                modelSchema: modelSchema, value: value","            })","            if (uuid in this.pendingRefs) {","                for (var i = this.pendingRefs[uuid].length - 1; i >= 0; i--) {","                    var opts = this.pendingRefs[uuid][i]","                    if (isAssignableTo(modelSchema, opts.modelSchema)) {","                        this.pendingRefs[uuid].splice(i, 1)","                        this.pendingRefsCount--","                        opts.callback(null, value)","                    }","                }","            }","        }","","/*"," * Update"," */","        /**","         * Similar to deserialize, but updates an existing object instance.","         * Properties will always updated entirely, but properties not present in the json will be kept as is.","         * Further this method behaves similar to deserialize.","         *","         * @param {object} modelSchema, optional if it can be inferred from the instance type","         * @param {object} target target instance to update","         * @param {object} json the json to deserialize","         * @param {function} callback the callback to invoke once deserialization has completed.","         * @param {*} customArgs custom arguments that are available as `context.args` during the deserialization process. This can be used as dependency injection mechanism to pass in, for example, stores.","         */","        function update(modelSchema, target, json, callback, customArgs) {","            var inferModelSchema =","                arguments.length === 2 // only target and json","                || typeof arguments[2] === \"function\" // callback as third arg","","            if (inferModelSchema) {","                target = arguments[0]","                modelSchema = getDefaultModelSchema(target)","                json = arguments[1]","                callback = arguments[2]","                customArgs = arguments[3]","            } else {","                modelSchema = getDefaultModelSchema(modelSchema)","            }","            invariant(isModelSchema(modelSchema), \"update failed to determine schema\")","            invariant(typeof target === \"object\" && target && !Array.isArray(target), \"update needs an object\")","            var context = new Context(null, modelSchema, json, callback, customArgs)","            context.target = target","            var lock = context.createCallback(GUARDED_NOOP)","            deserializePropsWithSchema(context, modelSchema, json, target)","            lock()","        }","","/*"," * ## Property schemas"," */","","        var _defaultPrimitiveProp = primitive()","","","        /**","         * Indicates that this field contains a primitive value (or Date) which should be serialized literally to json.","         *","         * @example","         * createModelSchema(Todo, {","         *   title: primitive()","         * })","         *","         * console.dir(serialize(new Todo(\"test\")))","         * // outputs: { title : \"test\" }","         *","         * @returns {ModelSchema}","         */","        function primitive() {","            return {","                serializer: function (value) {","                    invariant(isPrimitive(value), \"this value is not primitive: \" + value)","                    return value","                },","                deserializer: function (jsonValue, done) {","                    if (!isPrimitive(jsonValue))","                        return void done(\"[serializr] this value is not primitive: \" + jsonValue)","                    return void done(null, jsonValue)","                }","            }","        }","","        /**","         *","         *","         * Similar to primitive, but this field will be marked as the identifier for the given Model type.","         * This is used by for example `reference()` to serialize the reference","         *","         * Identifier accepts an optional `registerFn` with the signature:","         * `(id, target, context) => void`","         * that can be used to register this object in some store. note that not all fields of this object might","         * have been deserialized yet.","         *","         * @example","         * var todos = {};","         *","         * var s = _.createSimpleSchema({","         *     id: _.identifier((id, object) => todos[id] = object),","         *     title: true","         * })","         *","         * _.deserialize(s, {","         *     id: 1, title: \"test0\"","         * })","         * _.deserialize(s, [","         *     { id: 2, title: \"test2\" },","         *     { id: 1, title: \"test1\" }","         * ])","         *","         * t.deepEqual(todos, {","         *     1: { id: 1, title: \"test1\" },","         *     2: { id: 2, title: \"test2\" }","         * })","         *","         *","         * @param {RegisterFunction} registerFn optional function to register this object during creation.","         *","         * @returns {PropSchema}","         */","        function identifier(registerFn) {","            invariant(!registerFn || typeof registerFn === \"function\", \"First argument should be ommitted or function\")","            return {","                identifier: true,","                serializer: _defaultPrimitiveProp.serializer,","                deserializer: function (jsonValue, done, context) {","                    _defaultPrimitiveProp.deserializer(jsonValue, function(err, id) {","                        defaultRegisterFunction(id, context.target, context)","                        if (registerFn)","                            registerFn(id, context.target, context)","                        done(err, id)","                    })","                }","            }","        }","","        function defaultRegisterFunction(id, value, context) {","            context.rootContext.resolve(context.modelSchema, id, context.target)","        }","","        /**","         * Similar to primitive, serializes instances of Date objects","         *","         * @returns","         */","        function date() {","            // TODO: add format option?","            return {","                serializer: function(value) {","                    if (value === null || value === undefined)","                        return value","                    invariant(value instanceof Date, \"Expected Date object\")","                    return value.getTime()","                },","                deserializer: function (jsonValue, done) {","                    if (jsonValue === null || jsonValue === undefined)","                        return void done(null, jsonValue)","                    return void done(null, new Date(jsonValue))","                }","            }","        }","","","        /**","         * Alias indicates that this model property should be named differently in the generated json.","         * Alias should be the outermost propschema.","         *","         * @example","         * createModelSchema(Todo, {","         *   title: alias(\"task\", primitive())","         * })","         *","         * console.dir(serialize(new Todo(\"test\")))","         * // { task : \"test\" }","         *","         * @param {string} name name of the json field to be used for this property","         * @param {PropSchema} propSchema propSchema to (de)serialize the contents of this field","         * @returns {PropSchema}","         */","        function alias(name, propSchema) {","            invariant(name && typeof name === \"string\", \"expected prop name as first argument\")","            propSchema = (!propSchema || propSchema === true)  ? _defaultPrimitiveProp : propSchema","            invariant(isPropSchema(propSchema), \"expected prop schema as second argument\")","            invariant(!isAliasedPropSchema(propSchema), \"provided prop is already aliased\")","            return {","                jsonname: name,","                serializer: propSchema.serializer,","                deserializer: propSchema.deserializer,","                identifier: isIdentifierPropSchema(propSchema)","            }","        }","","        /**","         * Can be used to create simple custom propSchema.","         *","         * @example","         * var schema = _.createSimpleSchema({","         *   a: _.custom(","         *     function(v) { return v + 2 },","         *     function(v) { return v - 2 }","         *   )","         * })","         * t.deepEqual(_.serialize(s, { a: 4 }), { a: 6 })","         * t.deepEqual(_.deserialize(s, { a: 6 }), { a: 4 })","         *","         * @param {function} serializer function that takes a model value and turns it into a json value","         * @param {function} deserializer function that takes a json value and turns it into a model value","         * @returns {PropSchema}","         */","        function custom(serializer, deserializer) {","            invariant(typeof serializer === \"function\", \"first argument should be function\")","            invariant(typeof deserializer === \"function\", \"second argument should be function\")","            return {","                serializer: serializer,","                deserializer: function (jsonValue, done) {","                    done(null, deserializer(jsonValue))","                }","            }","        }","","        /**","         * `object` indicates that this property contains an object that needs to be (de)serialized","         * using its own model schema.","         *","         * N.B. mind issues with circular dependencies when importing model schema's from other files! The module resolve algorithm might expose classes before `createModelSchema` is executed for the target class.","         *","         * @example","         *","         * class SubTask{}","         * class Todo{}","         *","         * createModelSchema(SubTask, {","         *   title: true","         * });","         * createModelSchema(Todo, {","         *   title: true,","         *   subTask: object(SubTask)","         * });","         *","         * const todo = deserialize(Todo, {","         *   title: \"Task\",","         *   subTask: {","         *     title: \"Sub task\"","         *   }","         * });","         *","         * @param {ModelSchema} modelSchema to be used to (de)serialize the object","         * @returns {PropSchema}","         */","        function object(modelSchema) {","            invariant(typeof modelSchema === \"object\" || typeof modelSchema === \"function\", \"No modelschema provided. If you are importing it from another file be aware of circular dependencies.\")","            return {","                serializer: function (item) {","                    modelSchema = getDefaultModelSchema(modelSchema)","                    invariant(isModelSchema(modelSchema), \"expected modelSchema, got \" + modelSchema)","                    if (item === null || item === undefined)","                        return item","                    return serialize(modelSchema, item)","                },","                deserializer: function (childJson, done, context) {","                    modelSchema = getDefaultModelSchema(modelSchema)","                    invariant(isModelSchema(modelSchema), \"expected modelSchema, got \" + modelSchema)","                    if (childJson === null || childJson === undefined)","                        return void done(null, childJson)","                    return void deserializeObjectWithSchema(context, modelSchema, childJson, done)","                }","            }","        }","","        /**","         * `reference` can be used to (de)serialize references that point to other models.","         *","         * The first parameter should be either a ModelSchema that has an `identifier()` property (see identifier)","         * or a string that represents which attribute in the target object represents the identifier of the object.","         *","         * The second parameter is a lookup function that is invoked during deserialization to resolve an identifier to","         * an object. Its signature should be as follows:","         *","         * `lookupFunction(identifier, callback, context)` where:","         * 1. `identifier` is the identifier being resolved","         * 2. `callback` is a node style calblack function to be invoked with the found object (as second arg) or an error (first arg)","         * 3. `context` see context.","         *","         * The lookupFunction is optional. If it is not provided, it will try to find an object of the expected type and required identifier within the same JSON document","         *","         * N.B. mind issues with circular dependencies when importing model schemas from other files! The module resolve algorithm might expose classes before `createModelSchema` is executed for the target class.","         *","         * @example","         *","         *","         * class User{}","         * class Post{}","         *","         * createModelSchema(User, {","         *   uuid: identifier(),","         *   displayname: primitive()","         * })","         *","         * createModelSchema(Post, {","         *   author: reference(User, findUserById),","         *   message: primitive()","         * })","         *","         * function findUserById(uuid, callback) {","         *   fetch(\"http://host/user/\" + uuid)","         *     .then((userData) => {","         *       deserialize(User, userData, callback)","         *     })","         *     .catch(callback)","         * }","         *","         * deserialize(","         *   Post,","         *   {","         *     message: \"Hello World\",","         *     author: 234","         *   },","         *   (err, post) => {","         *     console.log(post)","         *   }","         * )","         *","         * @param target: ModelSchema or string","         * @param {RefLookupFunction} lookupFn function","         * @returns {PropSchema}","         */","        function reference(target, lookupFn) {","            invariant(!!target, \"No modelschema provided. If you are importing it from another file be aware of circular dependencies.\")","            var initialized = false","            var childIdentifierAttribute","            function initialize() {","                initialized = true","                invariant(typeof target !== \"string\" || lookupFn, \"if the reference target is specified by attribute name, a lookup function is required\")","                invariant(!lookupFn || typeof lookupFn === \"function\", \"second argument should be a lookup function\")","                if (typeof target === \"string\")","                    childIdentifierAttribute = target","                else {","                    var modelSchema = getDefaultModelSchema(target)","                    invariant(isModelSchema(modelSchema), \"expected model schema or string as first argument for 'ref', got \" + modelSchema)","                    lookupFn = lookupFn || createDefaultRefLookup(modelSchema)","                    childIdentifierAttribute = getIdentifierProp(modelSchema)","                    invariant(!!childIdentifierAttribute, \"provided model schema doesn't define an identifier() property and cannot be used by 'ref'.\")","                }","            }","            return {","                serializer: function (item) {","                    if (!initialized)","                        initialize()","                    return item ? item[childIdentifierAttribute] : null","                },","                deserializer: function(identifierValue, done, context) {","                    if (!initialized)","                        initialize()","                    if (identifierValue === null || identifierValue === undefined)","                        done(null, identifierValue)","                    else","                        lookupFn(identifierValue, done, context)","                }","            }","        }","","        function createDefaultRefLookup(modelSchema) {","            return function resolve(uuid, cb, context) {","                context.rootContext.await(modelSchema, uuid, cb)","            }","        }","","        /**","         * List indicates that this property contains a list of things.","         * Accepts a sub model schema to serialize the contents","         *","         * @example","         *","         * class SubTask{}","         * class Task{}","         * class Todo{}","         *","         * createModelSchema(SubTask, {","         *   title: true","         * })","         * createModelSchema(Todo, {","         *   title: true,","         *   subTask: list(object(SubTask))","         * })","         *","         * const todo = deserialize(Todo, {","         *   title: \"Task\",","         *   subTask: [{","         *     title: \"Sub task 1\"","         *   }]","         * })","         *","         * @param {PropSchema} propSchema to be used to (de)serialize the contents of the array","         * @returns {PropSchema}","         */","","        function list(propSchema) {","            propSchema = propSchema || _defaultPrimitiveProp","            invariant(isPropSchema(propSchema), \"expected prop schema as second argument\")","            invariant(!isAliasedPropSchema(propSchema), \"provided prop is aliased, please put aliases first\")","            return {","                serializer: function (ar) {","                    invariant(ar && \"length\" in ar && \"map\" in ar, \"expected array (like) object\")","                    return ar.map(propSchema.serializer)","                },","                deserializer: function(jsonArray, done, context) {","                    if (!Array.isArray(jsonArray))","                        return void done(\"[serializr] expected JSON array\")","                    parallel(","                        jsonArray,","                        function (item, itemDone) {","                            return propSchema.deserializer(item, itemDone, context)","                        },","                        done","                    )","                }","            }","        }","","        function isMapLike(thing) {","            return thing && typeof thing.keys === \"function\" && typeof thing.clear === \"function\"","        }","","        /**","         * Similar to list, but map represents a string keyed dynamic collection.","         * This can be both plain objects (default) or ES6 Map like structures.","         * This will be inferred from the initial value of the targetted attribute.","         *","         * @param {*} propSchema","         * @returns","         */","        function map(propSchema) {","            propSchema = propSchema || _defaultPrimitiveProp","            invariant(isPropSchema(propSchema), \"expected prop schema as second argument\")","            invariant(!isAliasedPropSchema(propSchema), \"provided prop is aliased, please put aliases first\")","            return {","                serializer: function (m) {","                    invariant(m && typeof m === \"object\", \"expected object or Map\")","                    var isMap = isMapLike(m)","                    var result = {}","                    if (isMap)","                        m.forEach(function(value, key) {","                            result[key] = propSchema.serializer(value)","                        })","                    else for (var key in m)","                        result[key] = propSchema.serializer(m[key])","                    return result","                },","                deserializer: function(jsonObject, done, context, oldValue) {","                    if (!jsonObject || typeof jsonObject !== \"object\")","                        return void done(\"[serializr] expected JSON object\")","                    var keys = Object.keys(jsonObject)","                    list(propSchema).deserializer(","                        keys.map(function (key) {","                            return jsonObject[key]","                        }),","                        function (err, values) {","                            if (err)","                                return void done(err)","                            var isMap = isMapLike(oldValue)","                            var newValue","                            if (isMap) {","                                // if the oldValue is a map, we recycle it","                                // there are many variations and this way we don't have to","                                // know about the original constructor","                                oldValue.clear()","                                newValue = oldValue","                            } else","                                newValue = {}","                            for (var i = 0, l = keys.length; i < l; i++)","                                if (isMap)","                                    newValue.set(keys[i], values[i])","                                else","                                    newValue[keys[i]] = values[i]","                            done(null, newValue)","                        },","                        context","                    )","                }","            }","        }","","/*"," * UMD shizzle"," */","        return {","            createModelSchema: createModelSchema,","            createSimpleSchema: createSimpleSchema,","            setDefaultModelSchema: setDefaultModelSchema,","            getDefaultModelSchema: getDefaultModelSchema,","            serializable: serializable,","            serialize: serialize,","            serializeAll: serializeAll,","            deserialize: deserialize,","            update: update,","            primitive: primitive,","            identifier: identifier,","            date: date,","            alias: alias,","            list: list,","            map: map,","            object: object,","            child: object, // deprecate","            reference: reference,","            ref: reference, // deprecate","            custom: custom,","            SKIP: SKIP","        }","    }","","    // UMD","    if (typeof exports === \"object\") {","        module.exports = mrFactory()","    } else if (typeof define === \"function\" && define.amd) {","        define(\"serializr\", [], mrFactory)","    } else {","        g.serializr = mrFactory()","    }","})(function() { return this }())",""],"l":{"1":1,"4":1,"6":1,"10":1,"11":0,"12":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"22":0,"26":1,"27":0,"28":0,"31":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"45":0,"46":0,"47":0,"50":0,"51":0,"55":1,"56":0,"57":0,"58":0,"128":1,"129":0,"131":0,"161":1,"162":0,"163":0,"164":0,"167":0,"172":0,"173":0,"174":0,"175":0,"177":0,"178":0,"210":1,"211":0,"213":0,"214":0,"215":0,"218":0,"223":1,"224":1,"225":1,"226":0,"227":0,"228":0,"229":0,"230":0,"233":1,"234":0,"236":0,"237":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"249":0,"250":1,"251":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"263":0,"267":0,"268":0,"270":0,"271":0,"272":0,"274":0,"275":0,"277":0,"278":0,"279":0,"297":1,"298":0,"300":0,"301":0,"302":0,"303":0,"306":0,"307":0,"316":1,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"339":1,"340":0,"341":0,"344":1,"345":0,"348":1,"349":0,"352":1,"353":0,"356":1,"357":0,"360":1,"361":0,"363":0,"364":0,"365":0,"366":0,"367":0,"369":0,"372":1,"373":0,"374":0,"375":0,"376":0,"378":0,"394":1,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"406":0,"407":0,"408":0,"409":0,"411":0,"414":1,"415":0,"416":0,"417":0,"418":0,"419":0,"422":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"439":0,"441":0,"444":1,"445":0,"446":0,"448":0,"449":0,"470":1,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"479":0,"481":0,"485":0,"487":0,"490":1,"491":0,"492":0,"493":0,"494":0,"496":0,"498":0,"499":0,"500":0,"501":0,"502":0,"505":1,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"528":0,"529":0,"538":1,"539":0,"540":0,"541":0,"542":0,"545":1,"546":0,"547":0,"549":0,"550":0,"554":1,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"570":0,"571":0,"574":1,"575":0,"577":0,"578":0,"579":0,"580":0,"581":0,"583":0,"584":0,"585":0,"586":0,"588":0,"591":0,"596":0,"604":1,"605":0,"606":0,"607":0,"608":0,"610":0,"611":0,"613":0,"614":0,"615":0,"616":0,"624":1,"625":0,"626":0,"627":0,"628":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"657":1,"658":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"669":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"684":1,"700":1,"701":1,"703":0,"704":0,"707":0,"708":0,"709":0,"751":1,"752":0,"753":0,"757":0,"758":0,"759":0,"760":0,"761":0,"767":1,"768":0,"776":1,"778":0,"780":0,"781":0,"782":0,"783":0,"786":0,"787":0,"788":0,"810":1,"811":0,"812":0,"813":0,"814":0,"815":0,"840":1,"841":0,"842":0,"843":0,"846":0,"880":1,"881":0,"882":0,"884":0,"885":0,"886":0,"887":0,"888":0,"891":0,"892":0,"893":0,"894":0,"895":0,"957":1,"958":0,"959":0,"960":0,"961":1,"962":0,"963":0,"964":0,"965":0,"966":0,"968":0,"969":0,"970":0,"971":0,"972":0,"975":0,"977":0,"978":0,"979":0,"982":0,"983":0,"984":0,"985":0,"987":0,"992":1,"993":0,"994":0,"1027":1,"1028":0,"1029":0,"1030":0,"1031":0,"1033":0,"1034":0,"1037":0,"1038":0,"1039":0,"1042":0,"1050":1,"1051":0,"1062":1,"1063":0,"1064":0,"1065":0,"1066":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1075":0,"1076":0,"1077":0,"1080":0,"1081":0,"1082":0,"1083":0,"1085":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1096":0,"1097":0,"1099":0,"1100":0,"1101":0,"1102":0,"1104":0,"1105":0,"1116":1,"1142":1,"1143":1,"1144":0,"1145":0,"1147":0,"1149":1}}}